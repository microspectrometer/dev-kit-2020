#ifndef _TEST_SENSORVIS_H
#define _TEST_SENSORVIS_H

void SetUp_GetSensorLED(void); void TearDown_GetSensorLED(void);
void GetSensorLED_reads_one_byte_of_payload(void);
void GetSensorLED_replies_with_three_bytes_if_led_is_non_existent(void);
void GetSensorLED_replies_msg_status_error_if_led_is_non_existent(void);
void GetSensorLED_replies_with_four_bytes_if_led_number_is_recognized(void);
void GetSensorLED_replies_msg_status_ok_if_led_number_is_recognized(void);
void GetSensorLED_replies_led_off_if_led_is_off(void);
void GetSensorLED_replies_led_green_if_led_is_green(void);
void GetSensorLED_replies_led_red_if_led_is_red(void);

void GetSensorLED_sends_OK_to_Bridge_to_signal_ready_for_payload(void);
void test_QueueLength_is_0_after_QueueInit(void);
void test_struct_syntax(void);
void test_QueueLength_increments_after_a_push(void);
void test_QueuePush_writes_to_byte_pointed_to_by_head(void);
void test_QueuePush_increments_head(void);
void test_QueuePush_does_nothing_if_Queue_is_full(void);
void test_QueueIsFull_returns_true_if_Queue_is_full(void);
void test_QueueIsFull_returns_false_if_Queue_is_not_full(void);
void test_QueueLength_decrements_after_a_pop(void);
void test_QueueLength_does_not_increase_beyond_max_length(void);
void test_QueuePop_reads_byte_pointed_to_by_tail(void);
void test_QueuePop_increments_tail(void);
void test_QueueLength_does_not_decrease_below_zero(void);
void test_QueuePop_returns_0_if_Queue_is_empty(void);
void test_QueuePop_does_not_increment_tail_if_Queue_is_empty(void);
void test_QueueIsEmpty_returns_true_if_Queue_is_empty(void);
void test_QueueIsEmpty_returns_false_if_Queue_is_not_empty(void);

#endif // _TEST_SENSORVIS_H
