#ifndef _TEST_AUTOEXPOSE_H
#define _TEST_AUTOEXPOSE_H

void AutoExpose_turns_led1_red_to_indicate_starting(void);
void AutoExpose_sets_min_peak_at_target_minus_tolerance(void);
void AutoExpose_clamps_min_peak_at_max_dark_if_target_minus_tolerance_is_GREATER_THAN_target(void);
void AutoExpose_clamps_min_peak_at_max_dark_if_target_minus_tolerance_is_LESS_THAN_max_dark(void);
void AutoExpose_sets_max_peak_at_target_plus_tolerance(void);
void AutoExpose_clamps_max_peak_at_65535_counts_if_target_plus_tolerance_is_LESS_THAN_target(void);
void AutoExpose_loops_until_done(void);
void AutoExpose_exposes_the_pixels(void);
void AutoExpose_reads_pixel_counts_into_global_frame_buffer(void);
void AutoExpose_finds_frame_peak_in_range_start_pixel_to_stop_pixel(void);
void AutoExpose_is_done_if_peak_less_than_max_dark_AND_exposure_at_max(void);
void AutoExpose_scales_exposure_by_10_if_peak_less_than_max_dark(void);
void AutoExpose_clamps_exposure_at_max_exposure_if_10_x_exposure_is_GREATER_THAN_max_exposure(void);
void AutoExpose_scales_exposure_by_half_if_peak_ABOVE_max_peak(void);
void AutoExpose_clamps_exposure_at_min_exposure_if_half_exposure_is_LESS_THAN_min_exposure(void);
void AutoExpose_is_done_if_peak_BELOW_min_peak_and_exposure_at_max_exposure(void);
void AutoExpose_scales_exposure_by_target_div_peak_if_peak_BELOW_min_peak_and_exposure_not_at_max(void);
void AutoExpose_clamps_exposure_at_max_exposure_if_gain_is_GREATER_THAN_max_exposure(void);
void AutoExpose_is_done_if_peak_is_in_the_target_range(void);
void AutoExpose_turns_led1_green_to_indicate_it_hit_the_target_range(void);
void AutoExpose_gives_up_if_it_iterates_for_max_tries(void);

#endif // _TEST_AUTOEXPOSE_H
