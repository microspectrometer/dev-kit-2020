
build/mBrd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000142  00800100  00000e78  00000f0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000629  00800242  00800242  0000104e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000104e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001080  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000420  00000000  00000000  000010c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000041f8  00000000  00000000  000014e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013f7  00000000  00000000  000056d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000023c9  00000000  00000000  00006acf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a28  00000000  00000000  00008e98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000019c4  00000000  00000000  000098c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001551  00000000  00000000  0000b284  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004e8  00000000  00000000  0000c7d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__vector_14>
  3c:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__vector_15>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 c9 06 	jmp	0xd92	; 0xd92 <__vector_17>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e7       	ldi	r30, 0x78	; 120
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 34       	cpi	r26, 0x42	; 66
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	28 e0       	ldi	r18, 0x08	; 8
  8c:	a2 e4       	ldi	r26, 0x42	; 66
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 36       	cpi	r26, 0x6B	; 107
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <main>
  9e:	0c 94 3a 07 	jmp	0xe74	; 0xe74 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SetBit>:
#include "ReadWriteBits.h"

inline void SetBit(uint8_t volatile * const port, uint8_t const bit) {
    *port |= 1<<bit;
  a6:	fc 01       	movw	r30, r24
  a8:	40 81       	ld	r20, Z
  aa:	21 e0       	ldi	r18, 0x01	; 1
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	01 c0       	rjmp	.+2      	; 0xb2 <SetBit+0xc>
  b0:	22 0f       	add	r18, r18
  b2:	6a 95       	dec	r22
  b4:	ea f7       	brpl	.-6      	; 0xb0 <SetBit+0xa>
  b6:	24 2b       	or	r18, r20
  b8:	20 83       	st	Z, r18
  ba:	08 95       	ret

000000bc <ClearBit>:
}

inline void ClearBit(uint8_t volatile * const port, uint8_t const bit) {
  bc:	fc 01       	movw	r30, r24
    *port &= ~(1<<bit);
  be:	90 81       	ld	r25, Z
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <ClearBit+0xc>
  c6:	22 0f       	add	r18, r18
  c8:	6a 95       	dec	r22
  ca:	ea f7       	brpl	.-6      	; 0xc6 <ClearBit+0xa>
  cc:	20 95       	com	r18
  ce:	29 23       	and	r18, r25
  d0:	20 83       	st	Z, r18
  d2:	08 95       	ret

000000d4 <ToggleBit>:
}

inline void ToggleBit(uint8_t volatile * const port, uint8_t const bit) {
    *port ^= (1<<bit);
  d4:	fc 01       	movw	r30, r24
  d6:	40 81       	ld	r20, Z
  d8:	21 e0       	ldi	r18, 0x01	; 1
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <ToggleBit+0xc>
  de:	22 0f       	add	r18, r18
  e0:	6a 95       	dec	r22
  e2:	ea f7       	brpl	.-6      	; 0xde <ToggleBit+0xa>
  e4:	24 27       	eor	r18, r20
  e6:	20 83       	st	Z, r18
  e8:	08 95       	ret

000000ea <BitIsSet>:
}

inline bool BitIsSet(uint8_t volatile * const port, uint8_t const bit) {
    return *port & (1<<bit);
  ea:	fc 01       	movw	r30, r24
  ec:	80 81       	ld	r24, Z
  ee:	21 e0       	ldi	r18, 0x01	; 1
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <BitIsSet+0xe>
  f4:	22 0f       	add	r18, r18
  f6:	33 1f       	adc	r19, r19
  f8:	6a 95       	dec	r22
  fa:	e2 f7       	brpl	.-8      	; 0xf4 <BitIsSet+0xa>
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	28 23       	and	r18, r24
 100:	39 23       	and	r19, r25
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	23 2b       	or	r18, r19
 106:	09 f4       	brne	.+2      	; 0x10a <BitIsSet+0x20>
 108:	80 e0       	ldi	r24, 0x00	; 0
}
 10a:	08 95       	ret

0000010c <DebugLedsTurnAllOn>:
void DebugLedsTurnAllRed(void)
{
    SetBit(DebugLeds_port, debug_led1);
    SetBit(DebugLeds_port, debug_led2);
    SetBit(DebugLeds_port, debug_led3);
    SetBit(DebugLeds_port, debug_led4);
 10c:	cf 93       	push	r28
 10e:	df 93       	push	r29
 110:	c0 91 40 02 	lds	r28, 0x0240	; 0x800240 <DebugLeds_ddr>
 114:	d0 91 41 02 	lds	r29, 0x0241	; 0x800241 <DebugLeds_ddr+0x1>
 118:	60 91 3d 02 	lds	r22, 0x023D	; 0x80023d <debug_led1>
 11c:	ce 01       	movw	r24, r28
 11e:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
 122:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <debug_led2>
 126:	ce 01       	movw	r24, r28
 128:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
 12c:	60 91 3b 02 	lds	r22, 0x023B	; 0x80023b <debug_led3>
 130:	ce 01       	movw	r24, r28
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
 136:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <debug_led4>
 13a:	ce 01       	movw	r24, r28
 13c:	df 91       	pop	r29
 13e:	cf 91       	pop	r28
 140:	0c 94 53 00 	jmp	0xa6	; 0xa6 <SetBit>

00000144 <DebugLedsTurnRed>:
 144:	68 2f       	mov	r22, r24
 146:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <DebugLeds_port>
 14a:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <DebugLeds_port+0x1>
 14e:	0c 94 53 00 	jmp	0xa6	; 0xa6 <SetBit>

00000152 <DebugLedsTurnAllGreen>:
}

void DebugLedsTurnAllGreen(void)
{
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
    ClearBit(DebugLeds_port, debug_led1);
 156:	c0 91 3e 02 	lds	r28, 0x023E	; 0x80023e <DebugLeds_port>
 15a:	d0 91 3f 02 	lds	r29, 0x023F	; 0x80023f <DebugLeds_port+0x1>
 15e:	60 91 3d 02 	lds	r22, 0x023D	; 0x80023d <debug_led1>
 162:	ce 01       	movw	r24, r28
 164:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
    ClearBit(DebugLeds_port, debug_led2);
 168:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <debug_led2>
 16c:	ce 01       	movw	r24, r28
 16e:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
    ClearBit(DebugLeds_port, debug_led3);
 172:	60 91 3b 02 	lds	r22, 0x023B	; 0x80023b <debug_led3>
 176:	ce 01       	movw	r24, r28
 178:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
    ClearBit(DebugLeds_port, debug_led4);
 17c:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <debug_led4>
 180:	ce 01       	movw	r24, r28
}
 182:	df 91       	pop	r29
 184:	cf 91       	pop	r28
void DebugLedsTurnAllGreen(void)
{
    ClearBit(DebugLeds_port, debug_led1);
    ClearBit(DebugLeds_port, debug_led2);
    ClearBit(DebugLeds_port, debug_led3);
    ClearBit(DebugLeds_port, debug_led4);
 186:	0c 94 5e 00 	jmp	0xbc	; 0xbc <ClearBit>

0000018a <DebugLedsToggleAll>:
}

void DebugLedsToggleAll(void)
{
 18a:	cf 93       	push	r28
 18c:	df 93       	push	r29
    ToggleBit(DebugLeds_port, debug_led1);
 18e:	c0 91 3e 02 	lds	r28, 0x023E	; 0x80023e <DebugLeds_port>
 192:	d0 91 3f 02 	lds	r29, 0x023F	; 0x80023f <DebugLeds_port+0x1>
 196:	60 91 3d 02 	lds	r22, 0x023D	; 0x80023d <debug_led1>
 19a:	ce 01       	movw	r24, r28
 19c:	0e 94 6a 00 	call	0xd4	; 0xd4 <ToggleBit>
    ToggleBit(DebugLeds_port, debug_led2);
 1a0:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <debug_led2>
 1a4:	ce 01       	movw	r24, r28
 1a6:	0e 94 6a 00 	call	0xd4	; 0xd4 <ToggleBit>
    ToggleBit(DebugLeds_port, debug_led3);
 1aa:	60 91 3b 02 	lds	r22, 0x023B	; 0x80023b <debug_led3>
 1ae:	ce 01       	movw	r24, r28
 1b0:	0e 94 6a 00 	call	0xd4	; 0xd4 <ToggleBit>
    ToggleBit(DebugLeds_port, debug_led4);
 1b4:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <debug_led4>
 1b8:	ce 01       	movw	r24, r28
}
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
void DebugLedsToggleAll(void)
{
    ToggleBit(DebugLeds_port, debug_led1);
    ToggleBit(DebugLeds_port, debug_led2);
    ToggleBit(DebugLeds_port, debug_led3);
    ToggleBit(DebugLeds_port, debug_led4);
 1be:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <ToggleBit>

000001c2 <ClearPendingSpiInterrupt_Implementation>:
}
bool (*SpiResponseIsReady)(void) = SpiResponseIsReady_Implementation;
void SpiMasterWaitForResponse(void)
{
    while( !SpiResponseIsReady() );
}
 1c2:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ReadSpiStatusRegister>
 1c6:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ReadSpiStatusRegister+0x1>
 1ca:	09 95       	icall
 1cc:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <ReadSpiDataRegister>
 1d0:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <ReadSpiDataRegister+0x1>
 1d4:	09 94       	ijmp

000001d6 <ReadSpiStatusRegister_Implementation>:
 1d6:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <Spi_spsr>
 1da:	f0 91 35 02 	lds	r31, 0x0235	; 0x800235 <Spi_spsr+0x1>
 1de:	80 81       	ld	r24, Z
 1e0:	08 95       	ret

000001e2 <ReadSpiDataRegister_Implementation>:
 1e2:	e0 91 32 02 	lds	r30, 0x0232	; 0x800232 <Spi_spdr>
 1e6:	f0 91 33 02 	lds	r31, 0x0233	; 0x800233 <Spi_spdr+0x1>
 1ea:	80 81       	ld	r24, Z
 1ec:	08 95       	ret

000001ee <EnableSpi_Implementation>:
 1ee:	60 91 30 02 	lds	r22, 0x0230	; 0x800230 <Spi_Enable>
 1f2:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <Spi_spcr>
 1f6:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <Spi_spcr+0x1>
 1fa:	0c 94 53 00 	jmp	0xa6	; 0xa6 <SetBit>

000001fe <SpiTransferIsDone_Implementation>:
 1fe:	60 91 2f 02 	lds	r22, 0x022F	; 0x80022f <Spi_InterruptFlag>
 202:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <Spi_spsr>
 206:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <Spi_spsr+0x1>
 20a:	0c 94 75 00 	jmp	0xea	; 0xea <BitIsSet>

0000020e <SpiSlaveInit>:
//
/* =====[ Spi Slave ]===== */
//
static void SetMisoAsOutput(void)
{
    SetBit(Spi_ddr, Spi_Miso);
 20e:	60 91 31 02 	lds	r22, 0x0231	; 0x800231 <Spi_Miso>
 212:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <Spi_ddr>
 216:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <Spi_ddr+0x1>
 21a:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
    // MISO is only driven hard high or hard low when:
    // - a SPI tranfer is in progress
    // - SPI is disabled
    // When not driven hard, the SPI module makes MISO a pull-up.
    SetMisoAsOutput();         // pin-direction is user-defined
    EnableSpi();
 21e:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <EnableSpi>
 222:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <EnableSpi+0x1>
 226:	09 95       	icall
    ClearPendingSpiInterrupt();
 228:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ClearPendingSpiInterrupt>
 22c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ClearPendingSpiInterrupt+0x1>
 230:	09 94       	ijmp

00000232 <StartAdcReadout>:
}
bool (*UartSpiTxBufferIsEmpty)(void) = TxBufferIsEmpty;
static bool Received8bits(void)
{
    // Check `data receive done` flag RXC0
    return BitIsSet(UartSpi_csra, UartSpi_RxComplete);
 232:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <UartSpi_AdcConv>
 236:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <UartSpi_port>
 23a:	90 91 2c 02 	lds	r25, 0x022C	; 0x80022c <UartSpi_port+0x1>
 23e:	0c 94 5e 00 	jmp	0xbc	; 0xbc <ClearBit>

00000242 <UartSpiInit>:
    UseSpiDataModeCpol1CPha1();
    CfgSpiToTransferMsbFirst();
    GiveSpiControlOverMisoAndMosiPins();
}
void UartSpiInit(void)
{
 242:	0f 93       	push	r16
 244:	1f 93       	push	r17
 246:	cf 93       	push	r28
 248:	df 93       	push	r29
        // baudrate in bits per second = fosc/(2*(UBBR0+1))
        // for (baudrate = fosc/2) set UBBR0=0
        // Check:
        // UBRR0 (baud rate register)  = ( fosc/(2*baudrate) ) -1
        // yes, UBBR0 is 0 if fosc=10MHz and baudrate=5MHz
    *UartSpi_br = 0;
 24a:	00 91 25 02 	lds	r16, 0x0225	; 0x800225 <UartSpi_br>
 24e:	10 91 26 02 	lds	r17, 0x0226	; 0x800226 <UartSpi_br+0x1>
 252:	f8 01       	movw	r30, r16
 254:	11 82       	std	Z+1, r1	; 0x01
 256:	10 82       	st	Z, r1
}
static void SetSckAsOutput(void)
{
    // Cfg XCK as an output. CPOL=1 makes the clock idle high.
    SetBit(UartSpi_ddr, UartSpi_Sck);
 258:	c0 91 2d 02 	lds	r28, 0x022D	; 0x80022d <UartSpi_ddr>
 25c:	d0 91 2e 02 	lds	r29, 0x022E	; 0x80022e <UartSpi_ddr+0x1>
 260:	60 91 23 02 	lds	r22, 0x0223	; 0x800223 <UartSpi_Sck>
 264:	ce 01       	movw	r24, r28
 266:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
}
void UartSpiInit(void)
{
    RunSpiAt5Mhz(); // datasheet says to call this first
    SetSckAsOutput();
    AdcConvIdleLow(); SetAdcConvAsOutput();
 26a:	0e 94 19 01 	call	0x232	; 0x232 <StartAdcReadout>
}
void (*UartSpiStartAdcConversion)(void) = StartAdcConversion;
static void SetAdcConvAsOutput(void)
{
    // cfg general purpose output for conversion-start and readout-start
    SetBit(UartSpi_ddr, UartSpi_AdcConv);
 26e:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <UartSpi_AdcConv>
 272:	ce 01       	movw	r24, r28
 274:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
}
static void EnableAtmega328UsartInSpiMasterMode(void)
{
    SetBit(UartSpi_csrc, UartSpi_ModeSelect0);
 278:	c0 91 27 02 	lds	r28, 0x0227	; 0x800227 <UartSpi_csrc>
 27c:	d0 91 28 02 	lds	r29, 0x0228	; 0x800228 <UartSpi_csrc+0x1>
 280:	60 91 22 02 	lds	r22, 0x0222	; 0x800222 <UartSpi_ModeSelect0>
 284:	ce 01       	movw	r24, r28
 286:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
    SetBit(UartSpi_csrc, UartSpi_ModeSelect1);
 28a:	60 91 21 02 	lds	r22, 0x0221	; 0x800221 <UartSpi_ModeSelect1>
 28e:	ce 01       	movw	r24, r28
 290:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
{
    // Use SPI data mode: CPOL=1, CPHA=1
        // clock idles high
        // load data on falling  clock edge
        // sample data on rising clock edge
    SetBit(UartSpi_csrc, UartSpi_ClockPolarity);  // clock idles high
 294:	60 91 1e 02 	lds	r22, 0x021E	; 0x80021e <UartSpi_ClockPolarity>
 298:	ce 01       	movw	r24, r28
 29a:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
    SetBit(UartSpi_csrc, UartSpi_ClockPhase);     // load data then sample data
 29e:	60 91 1d 02 	lds	r22, 0x021D	; 0x80021d <UartSpi_ClockPhase>
 2a2:	ce 01       	movw	r24, r28
 2a4:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
}
static void CfgSpiToTransferMsbFirst(void)
{
    ClearBit(UartSpi_csrc, UartSpi_DataOrder);
 2a8:	60 91 1c 02 	lds	r22, 0x021C	; 0x80021c <UartSpi_DataOrder>
 2ac:	ce 01       	movw	r24, r28
 2ae:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
}
static void GiveSpiControlOverMisoAndMosiPins(void)
{
    /* ---Enabling Rx and Tx overrides normal port operation--- */
    // Enable the receiver. The UART Rx pin becomes the SPI Miso.
    SetBit(UartSpi_csrb, UartSpi_RxEnable);
 2b2:	c0 91 29 02 	lds	r28, 0x0229	; 0x800229 <UartSpi_csrb>
 2b6:	d0 91 2a 02 	lds	r29, 0x022A	; 0x80022a <UartSpi_csrb+0x1>
 2ba:	60 91 20 02 	lds	r22, 0x0220	; 0x800220 <UartSpi_RxEnable>
 2be:	ce 01       	movw	r24, r28
 2c0:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
    // Enable the transmitter. The UART Tx pin becomes the SPI Mosi.
    SetBit(UartSpi_csrb, UartSpi_TxEnable);
 2c4:	60 91 1f 02 	lds	r22, 0x021F	; 0x80021f <UartSpi_TxEnable>
 2c8:	ce 01       	movw	r24, r28
 2ca:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
        // baudrate in bits per second = fosc/(2*(UBBR0+1))
        // for (baudrate = fosc/2) set UBBR0=0
        // Check:
        // UBRR0 (baud rate register)  = ( fosc/(2*baudrate) ) -1
        // yes, UBBR0 is 0 if fosc=10MHz and baudrate=5MHz
    *UartSpi_br = 0;
 2ce:	f8 01       	movw	r30, r16
 2d0:	11 82       	std	Z+1, r1	; 0x01
 2d2:	10 82       	st	Z, r1
    RunSpiAt5Mhz(); // datasheet says to call this first
    SetSckAsOutput();
    AdcConvIdleLow(); SetAdcConvAsOutput();
    SpiMasterCfg();
    RunSpiAt5Mhz(); // datasheet says to call this again after enable
}
 2d4:	df 91       	pop	r29
 2d6:	cf 91       	pop	r28
 2d8:	1f 91       	pop	r17
 2da:	0f 91       	pop	r16
 2dc:	08 95       	ret

000002de <LisRunClkAt50kHz_Implementation>:
    LisRunClkAt50kHz();
    LisClkOn();
}
static void LisRunClkAt50kHz_Implementation(void)
{
    PwmResetCounterAtTop();
 2de:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <PwmResetCounterAtTop>
 2e2:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <PwmResetCounterAtTop+0x1>
 2e6:	09 95       	icall
    PwmTopIsOcr0a();
 2e8:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <PwmTopIsOcr0a>
 2ec:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <PwmTopIsOcr0a+0x1>
 2f0:	09 95       	icall
    PwmClkIsCpuClk();
 2f2:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <PwmClkIsCpuClk>
 2f6:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <PwmClkIsCpuClk+0x1>
 2fa:	09 95       	icall
    *Lis_clktop = 200;           // 10MHz / 50kHz = 200 ticks
 2fc:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <Lis_clktop>
 300:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <Lis_clktop+0x1>
 304:	88 ec       	ldi	r24, 0xC8	; 200
 306:	80 83       	st	Z, r24
    *Lis_clkth = *Lis_clktop/2;  // 50% dutcy cycle: PASS 2018-08-21
 308:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <Lis_clkth>
 30c:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <Lis_clkth+0x1>
 310:	20 81       	ld	r18, Z
 312:	26 95       	lsr	r18
 314:	fc 01       	movw	r30, r24
 316:	20 83       	st	Z, r18
 318:	08 95       	ret

0000031a <LisClkOn_Implementation>:
}
void (*LisRunClkAt50kHz)(void) = LisRunClkAt50kHz_Implementation;

static void LisClkOn_Implementation(void)
{
    PwmEnableOutputSetUntilMatch();
 31a:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <PwmEnableOutputSetUntilMatch>
 31e:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <PwmEnableOutputSetUntilMatch+0x1>
 322:	09 94       	ijmp

00000324 <LisInit>:
static void RstIdleLowAfterPowerUp(void)
{
    ClearBit(Lis_port1, Lis_Rst);
}
void LisInit(void)
{
 324:	1f 93       	push	r17
 326:	cf 93       	push	r28
 328:	df 93       	push	r29
#include "Pwm.h"
#include "ReadWriteBits.h"

static void SetPixSelectAsOutput(void)
{
    SetBit(Lis_ddr2, Lis_PixSelect);
 32a:	c0 91 0f 02 	lds	r28, 0x020F	; 0x80020f <Lis_PixSelect>
 32e:	6c 2f       	mov	r22, r28
 330:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <Lis_ddr2>
 334:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <Lis_ddr2+0x1>
 338:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
{
    ClearBit(Lis_ddr1, Lis_Sync);
}
static void PixSelectIdleLow(void)
{
    ClearBit(Lis_port2, Lis_PixSelect);
 33c:	6c 2f       	mov	r22, r28
 33e:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <Lis_port2>
 342:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <Lis_port2+0x1>
 346:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
{
    SetBit(Lis_ddr2, Lis_PixSelect);
}
static void SetClkAsOutput(void)
{
    SetBit(Lis_ddr1, Lis_Clk);
 34a:	c0 91 1a 02 	lds	r28, 0x021A	; 0x80021a <Lis_ddr1>
 34e:	d0 91 1b 02 	lds	r29, 0x021B	; 0x80021b <Lis_ddr1+0x1>
 352:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <Lis_Clk>
 356:	ce 01       	movw	r24, r28
 358:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
}
static void SetRstAsOutput(void)
{
    SetBit(Lis_ddr1, Lis_Rst);
 35c:	10 91 0d 02 	lds	r17, 0x020D	; 0x80020d <Lis_Rst>
 360:	61 2f       	mov	r22, r17
 362:	ce 01       	movw	r24, r28
 364:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
{
    ClearBit(Lis_port2, Lis_PixSelect);
}
static void RstIdleLowAfterPowerUp(void)
{
    ClearBit(Lis_port1, Lis_Rst);
 368:	61 2f       	mov	r22, r17
 36a:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <Lis_port1>
 36e:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <Lis_port1+0x1>
 372:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
{
    SetBit(Lis_ddr1, Lis_Rst);
}
static void SetSyncAsInput(void)
{
    ClearBit(Lis_ddr1, Lis_Sync);
 376:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <Lis_Sync>
 37a:	ce 01       	movw	r24, r28
 37c:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
    PixSelectIdleLow();
    SetClkAsOutput();
    SetRstAsOutput();
    RstIdleLowAfterPowerUp();
    SetSyncAsInput();
    LisRunClkAt50kHz();
 380:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <LisRunClkAt50kHz>
 384:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <LisRunClkAt50kHz+0x1>
 388:	09 95       	icall
    LisClkOn();
 38a:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <LisClkOn>
 38e:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <LisClkOn+0x1>
}
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	1f 91       	pop	r17
    SetClkAsOutput();
    SetRstAsOutput();
    RstIdleLowAfterPowerUp();
    SetSyncAsInput();
    LisRunClkAt50kHz();
    LisClkOn();
 398:	09 94       	ijmp

0000039a <ResetCounterAtTop>:
#include "Pwm.h"
#include "ReadWriteBits.h"
static void ResetCounterAtTop(void)
{
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
    SetBit(Pwm_tccr0a, Pwm_Wgm00);
 39e:	c0 91 0a 02 	lds	r28, 0x020A	; 0x80020a <Pwm_tccr0a>
 3a2:	d0 91 0b 02 	lds	r29, 0x020B	; 0x80020b <Pwm_tccr0a+0x1>
 3a6:	60 91 07 02 	lds	r22, 0x0207	; 0x800207 <Pwm_Wgm00>
 3aa:	ce 01       	movw	r24, r28
 3ac:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
    SetBit(Pwm_tccr0a, Pwm_Wgm01);
 3b0:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <Pwm_Wgm01>
 3b4:	ce 01       	movw	r24, r28
}
 3b6:	df 91       	pop	r29
 3b8:	cf 91       	pop	r28
#include "Pwm.h"
#include "ReadWriteBits.h"
static void ResetCounterAtTop(void)
{
    SetBit(Pwm_tccr0a, Pwm_Wgm00);
    SetBit(Pwm_tccr0a, Pwm_Wgm01);
 3ba:	0c 94 53 00 	jmp	0xa6	; 0xa6 <SetBit>

000003be <TopIsOcr0a>:
}
void (*PwmResetCounterAtTop)(void) = ResetCounterAtTop;

static void TopIsOcr0a(void)
{
    SetBit(Pwm_tccr0b, Pwm_Wgm02);
 3be:	60 91 05 02 	lds	r22, 0x0205	; 0x800205 <Pwm_Wgm02>
 3c2:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <Pwm_tccr0b>
 3c6:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <Pwm_tccr0b+0x1>
 3ca:	0c 94 53 00 	jmp	0xa6	; 0xa6 <SetBit>

000003ce <PwmClkIsCpuClk_Implementation>:
}
void (*PwmTopIsOcr0a)(void) = TopIsOcr0a;

static void PwmClkIsCpuClk_Implementation(void)
{
 3ce:	cf 93       	push	r28
 3d0:	df 93       	push	r29
    SetBit  (Pwm_tccr0b, Pwm_Cs00);
 3d2:	c0 91 08 02 	lds	r28, 0x0208	; 0x800208 <Pwm_tccr0b>
 3d6:	d0 91 09 02 	lds	r29, 0x0209	; 0x800209 <Pwm_tccr0b+0x1>
 3da:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <Pwm_Cs00>
 3de:	ce 01       	movw	r24, r28
 3e0:	0e 94 53 00 	call	0xa6	; 0xa6 <SetBit>
    ClearBit(Pwm_tccr0b, Pwm_Cs01);
 3e4:	60 91 03 02 	lds	r22, 0x0203	; 0x800203 <Pwm_Cs01>
 3e8:	ce 01       	movw	r24, r28
 3ea:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
    ClearBit(Pwm_tccr0b, Pwm_Cs02);
 3ee:	60 91 02 02 	lds	r22, 0x0202	; 0x800202 <Pwm_Cs02>
 3f2:	ce 01       	movw	r24, r28
}
 3f4:	df 91       	pop	r29
 3f6:	cf 91       	pop	r28

static void PwmClkIsCpuClk_Implementation(void)
{
    SetBit  (Pwm_tccr0b, Pwm_Cs00);
    ClearBit(Pwm_tccr0b, Pwm_Cs01);
    ClearBit(Pwm_tccr0b, Pwm_Cs02);
 3f8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <ClearBit>

000003fc <EnableOutputSetUntilMatch>:
}
void (*PwmClkIsCpuClk)(void) = PwmClkIsCpuClk_Implementation;

static void EnableOutputSetUntilMatch(void)
{
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
    ClearBit(Pwm_tccr0a, Pwm_Com0b0);
 400:	c0 91 0a 02 	lds	r28, 0x020A	; 0x80020a <Pwm_tccr0a>
 404:	d0 91 0b 02 	lds	r29, 0x020B	; 0x80020b <Pwm_tccr0a+0x1>
 408:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <Pwm_Com0b0>
 40c:	ce 01       	movw	r24, r28
 40e:	0e 94 5e 00 	call	0xbc	; 0xbc <ClearBit>
    SetBit  (Pwm_tccr0a, Pwm_Com0b1);
 412:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <Pwm_Com0b1>
 416:	ce 01       	movw	r24, r28
}
 418:	df 91       	pop	r29
 41a:	cf 91       	pop	r28
void (*PwmClkIsCpuClk)(void) = PwmClkIsCpuClk_Implementation;

static void EnableOutputSetUntilMatch(void)
{
    ClearBit(Pwm_tccr0a, Pwm_Com0b0);
    SetBit  (Pwm_tccr0a, Pwm_Com0b1);
 41c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <SetBit>

00000420 <LisFrameReadout>:
}
void Show_data_on_debug_leds(uint8_t four_bits)
{
    // Show the lower nibble of input `four_bits`
    uint8_t *pfour_bits = &four_bits;
    if (BitIsSet(pfour_bits, 0)) DebugLedsTurnRed(debug_led1);
 420:	cf 93       	push	r28
 422:	df 93       	push	r29
 424:	aa 9a       	sbi	0x15, 2	; 21
 426:	aa 9b       	sbis	0x15, 2	; 21
 428:	fe cf       	rjmp	.-4      	; 0x426 <LisFrameReadout+0x6>
 42a:	aa 9a       	sbi	0x15, 2	; 21
 42c:	5e 9a       	sbi	0x0b, 6	; 11
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <Lis_nticks_counter+0x1>
 436:	80 93 47 02 	sts	0x0247, r24	; 0x800247 <Lis_nticks_counter>
 43a:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <Lis_nticks_exposure>
 43e:	90 91 fc 01 	lds	r25, 0x01FC	; 0x8001fc <Lis_nticks_exposure+0x1>
 442:	89 2b       	or	r24, r25
 444:	b1 f0       	breq	.+44     	; 0x472 <LisFrameReadout+0x52>
 446:	aa 9a       	sbi	0x15, 2	; 21
 448:	aa 9b       	sbis	0x15, 2	; 21
 44a:	fe cf       	rjmp	.-4      	; 0x448 <LisFrameReadout+0x28>
 44c:	aa 9a       	sbi	0x15, 2	; 21
 44e:	80 91 47 02 	lds	r24, 0x0247	; 0x800247 <Lis_nticks_counter>
 452:	90 91 48 02 	lds	r25, 0x0248	; 0x800248 <Lis_nticks_counter+0x1>
 456:	9c 01       	movw	r18, r24
 458:	2f 5f       	subi	r18, 0xFF	; 255
 45a:	3f 4f       	sbci	r19, 0xFF	; 255
 45c:	30 93 48 02 	sts	0x0248, r19	; 0x800248 <Lis_nticks_counter+0x1>
 460:	20 93 47 02 	sts	0x0247, r18	; 0x800247 <Lis_nticks_counter>
 464:	20 91 fb 01 	lds	r18, 0x01FB	; 0x8001fb <Lis_nticks_exposure>
 468:	30 91 fc 01 	lds	r19, 0x01FC	; 0x8001fc <Lis_nticks_exposure+0x1>
 46c:	82 17       	cp	r24, r18
 46e:	93 07       	cpc	r25, r19
 470:	50 f3       	brcs	.-44     	; 0x446 <LisFrameReadout+0x26>
 472:	5e 98       	cbi	0x0b, 6	; 11
 474:	8b e4       	ldi	r24, 0x4B	; 75
 476:	92 e0       	ldi	r25, 0x02	; 2
 478:	90 93 fa 01 	sts	0x01FA, r25	; 0x8001fa <pframe+0x1>
 47c:	80 93 f9 01 	sts	0x01F9, r24	; 0x8001f9 <pframe>
 480:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <Lis_npixels_counter+0x1>
 484:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <Lis_npixels_counter>
 488:	4f 9b       	sbis	0x09, 7	; 9
 48a:	fe cf       	rjmp	.-4      	; 0x488 <LisFrameReadout+0x68>
 48c:	4f 99       	sbic	0x09, 7	; 9
 48e:	fe cf       	rjmp	.-4      	; 0x48c <LisFrameReadout+0x6c>
 490:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <lis_sum_mode>
 494:	81 30       	cpi	r24, 0x01	; 1
 496:	09 f4       	brne	.+2      	; 0x49a <LisFrameReadout+0x7a>
 498:	83 c0       	rjmp	.+262    	; 0x5a0 <LisFrameReadout+0x180>
 49a:	c0 e1       	ldi	r28, 0x10	; 16
 49c:	d3 e0       	ldi	r29, 0x03	; 3
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	90 93 46 02 	sts	0x0246, r25	; 0x800246 <Lis_npixels_counter+0x1>
 4a6:	80 93 45 02 	sts	0x0245, r24	; 0x800245 <Lis_npixels_counter>
 4aa:	a9 9a       	sbi	0x15, 1	; 21
 4ac:	a9 9b       	sbis	0x15, 1	; 21
 4ae:	fe cf       	rjmp	.-4      	; 0x4ac <LisFrameReadout+0x8c>
 4b0:	a9 9a       	sbi	0x15, 1	; 21
 4b2:	5a 9a       	sbi	0x0b, 2	; 11
 4b4:	e0 91 fd 01 	lds	r30, 0x01FD	; 0x8001fd <Delay3CpuCyclesPerTick>
 4b8:	f0 91 fe 01 	lds	r31, 0x01FE	; 0x8001fe <Delay3CpuCyclesPerTick+0x1>
 4bc:	8b e0       	ldi	r24, 0x0B	; 11
 4be:	09 95       	icall
 4c0:	5a 98       	cbi	0x0b, 2	; 11
 4c2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 4c6:	85 ff       	sbrs	r24, 5
 4c8:	fc cf       	rjmp	.-8      	; 0x4c2 <LisFrameReadout+0xa2>
 4ca:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 4ce:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 4d2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 4d6:	87 ff       	sbrs	r24, 7
 4d8:	fc cf       	rjmp	.-8      	; 0x4d2 <LisFrameReadout+0xb2>
 4da:	e0 91 f9 01 	lds	r30, 0x01F9	; 0x8001f9 <pframe>
 4de:	f0 91 fa 01 	lds	r31, 0x01FA	; 0x8001fa <pframe+0x1>
 4e2:	cf 01       	movw	r24, r30
 4e4:	01 96       	adiw	r24, 0x01	; 1
 4e6:	90 93 fa 01 	sts	0x01FA, r25	; 0x8001fa <pframe+0x1>
 4ea:	80 93 f9 01 	sts	0x01F9, r24	; 0x8001f9 <pframe>
 4ee:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 4f2:	80 83       	st	Z, r24
 4f4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 4f8:	87 ff       	sbrs	r24, 7
 4fa:	fc cf       	rjmp	.-8      	; 0x4f4 <LisFrameReadout+0xd4>
 4fc:	e0 91 f9 01 	lds	r30, 0x01F9	; 0x8001f9 <pframe>
 500:	f0 91 fa 01 	lds	r31, 0x01FA	; 0x8001fa <pframe+0x1>
 504:	cf 01       	movw	r24, r30
 506:	01 96       	adiw	r24, 0x01	; 1
 508:	90 93 fa 01 	sts	0x01FA, r25	; 0x8001fa <pframe+0x1>
 50c:	80 93 f9 01 	sts	0x01F9, r24	; 0x8001f9 <pframe>
 510:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 514:	80 83       	st	Z, r24
 516:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <Lis_npixels_counter>
 51a:	90 91 46 02 	lds	r25, 0x0246	; 0x800246 <Lis_npixels_counter+0x1>
 51e:	9c 01       	movw	r18, r24
 520:	2f 5f       	subi	r18, 0xFF	; 255
 522:	3f 4f       	sbci	r19, 0xFF	; 255
 524:	30 93 46 02 	sts	0x0246, r19	; 0x800246 <Lis_npixels_counter+0x1>
 528:	20 93 45 02 	sts	0x0245, r18	; 0x800245 <Lis_npixels_counter>
 52c:	8c 17       	cp	r24, r28
 52e:	9d 07       	cpc	r25, r29
 530:	08 f4       	brcc	.+2      	; 0x534 <LisFrameReadout+0x114>
 532:	bb cf       	rjmp	.-138    	; 0x4aa <LisFrameReadout+0x8a>
 534:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <lis_sum_mode>
 538:	81 30       	cpi	r24, 0x01	; 1
 53a:	a9 f1       	breq	.+106    	; 0x5a6 <LisFrameReadout+0x186>
 53c:	81 e0       	ldi	r24, 0x01	; 1
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	90 93 46 02 	sts	0x0246, r25	; 0x800246 <Lis_npixels_counter+0x1>
 544:	80 93 45 02 	sts	0x0245, r24	; 0x800245 <Lis_npixels_counter>
 548:	48 e4       	ldi	r20, 0x48	; 72
 54a:	52 e0       	ldi	r21, 0x02	; 2
 54c:	eb e4       	ldi	r30, 0x4B	; 75
 54e:	f2 e0       	ldi	r31, 0x02	; 2
 550:	04 c0       	rjmp	.+8      	; 0x55a <LisFrameReadout+0x13a>
 552:	e0 91 f9 01 	lds	r30, 0x01F9	; 0x8001f9 <pframe>
 556:	f0 91 fa 01 	lds	r31, 0x01FA	; 0x8001fa <pframe+0x1>
 55a:	cf 01       	movw	r24, r30
 55c:	01 96       	adiw	r24, 0x01	; 1
 55e:	90 93 fa 01 	sts	0x01FA, r25	; 0x8001fa <pframe+0x1>
 562:	80 93 f9 01 	sts	0x01F9, r24	; 0x8001f9 <pframe>
 566:	10 82       	st	Z, r1
 568:	e0 91 f9 01 	lds	r30, 0x01F9	; 0x8001f9 <pframe>
 56c:	f0 91 fa 01 	lds	r31, 0x01FA	; 0x8001fa <pframe+0x1>
 570:	cf 01       	movw	r24, r30
 572:	01 96       	adiw	r24, 0x01	; 1
 574:	90 93 fa 01 	sts	0x01FA, r25	; 0x8001fa <pframe+0x1>
 578:	80 93 f9 01 	sts	0x01F9, r24	; 0x8001f9 <pframe>
 57c:	10 82       	st	Z, r1
 57e:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <Lis_npixels_counter>
 582:	90 91 46 02 	lds	r25, 0x0246	; 0x800246 <Lis_npixels_counter+0x1>
 586:	9c 01       	movw	r18, r24
 588:	2f 5f       	subi	r18, 0xFF	; 255
 58a:	3f 4f       	sbci	r19, 0xFF	; 255
 58c:	30 93 46 02 	sts	0x0246, r19	; 0x800246 <Lis_npixels_counter+0x1>
 590:	20 93 45 02 	sts	0x0245, r18	; 0x800245 <Lis_npixels_counter>
 594:	84 17       	cp	r24, r20
 596:	95 07       	cpc	r25, r21
 598:	e0 f2       	brcs	.-72     	; 0x552 <LisFrameReadout+0x132>
 59a:	df 91       	pop	r29
 59c:	cf 91       	pop	r28
 59e:	08 95       	ret
 5a0:	c8 e8       	ldi	r28, 0x88	; 136
 5a2:	d1 e0       	ldi	r29, 0x01	; 1
 5a4:	7c cf       	rjmp	.-264    	; 0x49e <LisFrameReadout+0x7e>
 5a6:	81 e0       	ldi	r24, 0x01	; 1
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	90 93 46 02 	sts	0x0246, r25	; 0x800246 <Lis_npixels_counter+0x1>
 5ae:	80 93 45 02 	sts	0x0245, r24	; 0x800245 <Lis_npixels_counter>
 5b2:	44 e2       	ldi	r20, 0x24	; 36
 5b4:	51 e0       	ldi	r21, 0x01	; 1
 5b6:	ca cf       	rjmp	.-108    	; 0x54c <LisFrameReadout+0x12c>

000005b8 <WriteCfgToLis>:
 5b8:	98 b1       	in	r25, 0x08	; 8
 5ba:	84 e0       	ldi	r24, 0x04	; 4
 5bc:	89 27       	eor	r24, r25
 5be:	88 b9       	out	0x08, r24	; 8
 5c0:	98 b1       	in	r25, 0x08	; 8
 5c2:	82 e0       	ldi	r24, 0x02	; 2
 5c4:	89 27       	eor	r24, r25
 5c6:	88 b9       	out	0x08, r24	; 8
 5c8:	aa 9a       	sbi	0x15, 2	; 21
 5ca:	aa 9b       	sbis	0x15, 2	; 21
 5cc:	fe cf       	rjmp	.-4      	; 0x5ca <WriteCfgToLis+0x12>
 5ce:	aa 9a       	sbi	0x15, 2	; 21
 5d0:	28 9a       	sbi	0x05, 0	; 5
 5d2:	5e 98       	cbi	0x0b, 6	; 11
 5d4:	a9 9a       	sbi	0x15, 1	; 21
 5d6:	a9 9b       	sbis	0x15, 1	; 21
 5d8:	fe cf       	rjmp	.-4      	; 0x5d6 <WriteCfgToLis+0x1e>
 5da:	a9 9a       	sbi	0x15, 1	; 21
 5dc:	aa 9a       	sbi	0x15, 2	; 21
 5de:	aa 9b       	sbis	0x15, 2	; 21
 5e0:	fe cf       	rjmp	.-4      	; 0x5de <WriteCfgToLis+0x26>
 5e2:	aa 9a       	sbi	0x15, 2	; 21
 5e4:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <lis_sum_mode>
 5e8:	81 30       	cpi	r24, 0x01	; 1
 5ea:	09 f4       	brne	.+2      	; 0x5ee <WriteCfgToLis+0x36>
 5ec:	a1 c0       	rjmp	.+322    	; 0x730 <WriteCfgToLis+0x178>
 5ee:	5e 98       	cbi	0x0b, 6	; 11
 5f0:	a9 9a       	sbi	0x15, 1	; 21
 5f2:	a9 9b       	sbis	0x15, 1	; 21
 5f4:	fe cf       	rjmp	.-4      	; 0x5f2 <WriteCfgToLis+0x3a>
 5f6:	a9 9a       	sbi	0x15, 1	; 21
 5f8:	aa 9a       	sbi	0x15, 2	; 21
 5fa:	aa 9b       	sbis	0x15, 2	; 21
 5fc:	fe cf       	rjmp	.-4      	; 0x5fa <WriteCfgToLis+0x42>
 5fe:	aa 9a       	sbi	0x15, 2	; 21
 600:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <lis_gain>
 604:	84 30       	cpi	r24, 0x04	; 4
 606:	09 f4       	brne	.+2      	; 0x60a <WriteCfgToLis+0x52>
 608:	55 c0       	rjmp	.+170    	; 0x6b4 <WriteCfgToLis+0xfc>
 60a:	82 30       	cpi	r24, 0x02	; 2
 60c:	09 f4       	brne	.+2      	; 0x610 <WriteCfgToLis+0x58>
 60e:	99 c0       	rjmp	.+306    	; 0x742 <WriteCfgToLis+0x18a>
 610:	81 30       	cpi	r24, 0x01	; 1
 612:	09 f4       	brne	.+2      	; 0x616 <WriteCfgToLis+0x5e>
 614:	cf c0       	rjmp	.+414    	; 0x7b4 <WriteCfgToLis+0x1fc>
 616:	5e 9a       	sbi	0x0b, 6	; 11
 618:	a9 9a       	sbi	0x15, 1	; 21
 61a:	a9 9b       	sbis	0x15, 1	; 21
 61c:	fe cf       	rjmp	.-4      	; 0x61a <WriteCfgToLis+0x62>
 61e:	a9 9a       	sbi	0x15, 1	; 21
 620:	aa 9a       	sbi	0x15, 2	; 21
 622:	aa 9b       	sbis	0x15, 2	; 21
 624:	fe cf       	rjmp	.-4      	; 0x622 <WriteCfgToLis+0x6a>
 626:	aa 9a       	sbi	0x15, 2	; 21
 628:	5e 9a       	sbi	0x0b, 6	; 11
 62a:	a9 9a       	sbi	0x15, 1	; 21
 62c:	a9 9b       	sbis	0x15, 1	; 21
 62e:	fe cf       	rjmp	.-4      	; 0x62c <WriteCfgToLis+0x74>
 630:	a9 9a       	sbi	0x15, 1	; 21
 632:	aa 9a       	sbi	0x15, 2	; 21
 634:	aa 9b       	sbis	0x15, 2	; 21
 636:	fe cf       	rjmp	.-4      	; 0x634 <WriteCfgToLis+0x7c>
 638:	aa 9a       	sbi	0x15, 2	; 21
 63a:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <lis_rowselect>
 63e:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <__data_end>
 642:	81 30       	cpi	r24, 0x01	; 1
 644:	09 f4       	brne	.+2      	; 0x648 <WriteCfgToLis+0x90>
 646:	4f c0       	rjmp	.+158    	; 0x6e6 <WriteCfgToLis+0x12e>
 648:	82 30       	cpi	r24, 0x02	; 2
 64a:	09 f4       	brne	.+2      	; 0x64e <WriteCfgToLis+0x96>
 64c:	8c c0       	rjmp	.+280    	; 0x766 <WriteCfgToLis+0x1ae>
 64e:	83 30       	cpi	r24, 0x03	; 3
 650:	09 f4       	brne	.+2      	; 0x654 <WriteCfgToLis+0x9c>
 652:	eb c0       	rjmp	.+470    	; 0x82a <WriteCfgToLis+0x272>
 654:	84 30       	cpi	r24, 0x04	; 4
 656:	09 f4       	brne	.+2      	; 0x65a <WriteCfgToLis+0xa2>
 658:	0f c1       	rjmp	.+542    	; 0x878 <WriteCfgToLis+0x2c0>
 65a:	85 30       	cpi	r24, 0x05	; 5
 65c:	09 f4       	brne	.+2      	; 0x660 <WriteCfgToLis+0xa8>
 65e:	bc c0       	rjmp	.+376    	; 0x7d8 <WriteCfgToLis+0x220>
 660:	86 30       	cpi	r24, 0x06	; 6
 662:	09 f4       	brne	.+2      	; 0x666 <WriteCfgToLis+0xae>
 664:	30 c1       	rjmp	.+608    	; 0x8c6 <WriteCfgToLis+0x30e>
 666:	87 30       	cpi	r24, 0x07	; 7
 668:	09 f4       	brne	.+2      	; 0x66c <WriteCfgToLis+0xb4>
 66a:	54 c1       	rjmp	.+680    	; 0x914 <__stack+0x15>
 66c:	88 30       	cpi	r24, 0x08	; 8
 66e:	09 f4       	brne	.+2      	; 0x672 <WriteCfgToLis+0xba>
 670:	78 c1       	rjmp	.+752    	; 0x962 <__stack+0x63>
 672:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 676:	88 23       	and	r24, r24
 678:	d1 f0       	breq	.+52     	; 0x6ae <WriteCfgToLis+0xf6>
 67a:	e0 e0       	ldi	r30, 0x00	; 0
 67c:	f0 e0       	ldi	r31, 0x00	; 0
 67e:	e2 52       	subi	r30, 0x22	; 34
 680:	fe 4f       	sbci	r31, 0xFE	; 254
 682:	80 81       	ld	r24, Z
 684:	81 30       	cpi	r24, 0x01	; 1
 686:	09 f4       	brne	.+2      	; 0x68a <WriteCfgToLis+0xd2>
 688:	ce c0       	rjmp	.+412    	; 0x826 <WriteCfgToLis+0x26e>
 68a:	5e 98       	cbi	0x0b, 6	; 11
 68c:	a9 9a       	sbi	0x15, 1	; 21
 68e:	a9 9b       	sbis	0x15, 1	; 21
 690:	fe cf       	rjmp	.-4      	; 0x68e <WriteCfgToLis+0xd6>
 692:	a9 9a       	sbi	0x15, 1	; 21
 694:	aa 9a       	sbi	0x15, 2	; 21
 696:	aa 9b       	sbis	0x15, 2	; 21
 698:	fe cf       	rjmp	.-4      	; 0x696 <WriteCfgToLis+0xde>
 69a:	aa 9a       	sbi	0x15, 2	; 21
 69c:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 6a0:	ef 5f       	subi	r30, 0xFF	; 255
 6a2:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 6a6:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 6aa:	e8 17       	cp	r30, r24
 6ac:	38 f3       	brcs	.-50     	; 0x67c <WriteCfgToLis+0xc4>
 6ae:	5e 98       	cbi	0x0b, 6	; 11
 6b0:	28 98       	cbi	0x05, 0	; 5
 6b2:	08 95       	ret
 6b4:	5e 9a       	sbi	0x0b, 6	; 11
 6b6:	a9 9a       	sbi	0x15, 1	; 21
 6b8:	a9 9b       	sbis	0x15, 1	; 21
 6ba:	fe cf       	rjmp	.-4      	; 0x6b8 <WriteCfgToLis+0x100>
 6bc:	a9 9a       	sbi	0x15, 1	; 21
 6be:	aa 9a       	sbi	0x15, 2	; 21
 6c0:	aa 9b       	sbis	0x15, 2	; 21
 6c2:	fe cf       	rjmp	.-4      	; 0x6c0 <WriteCfgToLis+0x108>
 6c4:	aa 9a       	sbi	0x15, 2	; 21
 6c6:	5e 98       	cbi	0x0b, 6	; 11
 6c8:	a9 9a       	sbi	0x15, 1	; 21
 6ca:	a9 9b       	sbis	0x15, 1	; 21
 6cc:	fe cf       	rjmp	.-4      	; 0x6ca <WriteCfgToLis+0x112>
 6ce:	a9 9a       	sbi	0x15, 1	; 21
 6d0:	aa 9a       	sbi	0x15, 2	; 21
 6d2:	aa 9b       	sbis	0x15, 2	; 21
 6d4:	fe cf       	rjmp	.-4      	; 0x6d2 <WriteCfgToLis+0x11a>
 6d6:	aa 9a       	sbi	0x15, 2	; 21
 6d8:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <lis_rowselect>
 6dc:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <__data_end>
 6e0:	81 30       	cpi	r24, 0x01	; 1
 6e2:	09 f0       	breq	.+2      	; 0x6e6 <WriteCfgToLis+0x12e>
 6e4:	b1 cf       	rjmp	.-158    	; 0x648 <WriteCfgToLis+0x90>
 6e6:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 6ea:	88 23       	and	r24, r24
 6ec:	01 f3       	breq	.-64     	; 0x6ae <WriteCfgToLis+0xf6>
 6ee:	e0 e0       	ldi	r30, 0x00	; 0
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	ea 5e       	subi	r30, 0xEA	; 234
 6f4:	fe 4f       	sbci	r31, 0xFE	; 254
 6f6:	80 81       	ld	r24, Z
 6f8:	81 30       	cpi	r24, 0x01	; 1
 6fa:	c1 f0       	breq	.+48     	; 0x72c <WriteCfgToLis+0x174>
 6fc:	5e 98       	cbi	0x0b, 6	; 11
 6fe:	a9 9a       	sbi	0x15, 1	; 21
 700:	a9 9b       	sbis	0x15, 1	; 21
 702:	fe cf       	rjmp	.-4      	; 0x700 <WriteCfgToLis+0x148>
 704:	a9 9a       	sbi	0x15, 1	; 21
 706:	aa 9a       	sbi	0x15, 2	; 21
 708:	aa 9b       	sbis	0x15, 2	; 21
 70a:	fe cf       	rjmp	.-4      	; 0x708 <WriteCfgToLis+0x150>
 70c:	aa 9a       	sbi	0x15, 2	; 21
 70e:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 712:	ef 5f       	subi	r30, 0xFF	; 255
 714:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 718:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 71c:	e8 17       	cp	r30, r24
 71e:	38 f6       	brcc	.-114    	; 0x6ae <WriteCfgToLis+0xf6>
 720:	f0 e0       	ldi	r31, 0x00	; 0
 722:	ea 5e       	subi	r30, 0xEA	; 234
 724:	fe 4f       	sbci	r31, 0xFE	; 254
 726:	80 81       	ld	r24, Z
 728:	81 30       	cpi	r24, 0x01	; 1
 72a:	41 f7       	brne	.-48     	; 0x6fc <WriteCfgToLis+0x144>
 72c:	5e 9a       	sbi	0x0b, 6	; 11
 72e:	e7 cf       	rjmp	.-50     	; 0x6fe <WriteCfgToLis+0x146>
 730:	5e 9a       	sbi	0x0b, 6	; 11
 732:	a9 9a       	sbi	0x15, 1	; 21
 734:	a9 9b       	sbis	0x15, 1	; 21
 736:	fe cf       	rjmp	.-4      	; 0x734 <WriteCfgToLis+0x17c>
 738:	a9 9a       	sbi	0x15, 1	; 21
 73a:	aa 9a       	sbi	0x15, 2	; 21
 73c:	aa 9b       	sbis	0x15, 2	; 21
 73e:	fe cf       	rjmp	.-4      	; 0x73c <WriteCfgToLis+0x184>
 740:	5e cf       	rjmp	.-324    	; 0x5fe <WriteCfgToLis+0x46>
 742:	5e 98       	cbi	0x0b, 6	; 11
 744:	a9 9a       	sbi	0x15, 1	; 21
 746:	a9 9b       	sbis	0x15, 1	; 21
 748:	fe cf       	rjmp	.-4      	; 0x746 <WriteCfgToLis+0x18e>
 74a:	a9 9a       	sbi	0x15, 1	; 21
 74c:	aa 9a       	sbi	0x15, 2	; 21
 74e:	aa 9b       	sbis	0x15, 2	; 21
 750:	fe cf       	rjmp	.-4      	; 0x74e <WriteCfgToLis+0x196>
 752:	aa 9a       	sbi	0x15, 2	; 21
 754:	5e 9a       	sbi	0x0b, 6	; 11
 756:	a9 9a       	sbi	0x15, 1	; 21
 758:	a9 9b       	sbis	0x15, 1	; 21
 75a:	fe cf       	rjmp	.-4      	; 0x758 <WriteCfgToLis+0x1a0>
 75c:	a9 9a       	sbi	0x15, 1	; 21
 75e:	aa 9a       	sbi	0x15, 2	; 21
 760:	aa 9b       	sbis	0x15, 2	; 21
 762:	fe cf       	rjmp	.-4      	; 0x760 <WriteCfgToLis+0x1a8>
 764:	69 cf       	rjmp	.-302    	; 0x638 <WriteCfgToLis+0x80>
 766:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 76a:	88 23       	and	r24, r24
 76c:	09 f4       	brne	.+2      	; 0x770 <WriteCfgToLis+0x1b8>
 76e:	9f cf       	rjmp	.-194    	; 0x6ae <WriteCfgToLis+0xf6>
 770:	e0 e0       	ldi	r30, 0x00	; 0
 772:	f0 e0       	ldi	r31, 0x00	; 0
 774:	e1 5d       	subi	r30, 0xD1	; 209
 776:	fe 4f       	sbci	r31, 0xFE	; 254
 778:	80 81       	ld	r24, Z
 77a:	81 30       	cpi	r24, 0x01	; 1
 77c:	c9 f0       	breq	.+50     	; 0x7b0 <WriteCfgToLis+0x1f8>
 77e:	5e 98       	cbi	0x0b, 6	; 11
 780:	a9 9a       	sbi	0x15, 1	; 21
 782:	a9 9b       	sbis	0x15, 1	; 21
 784:	fe cf       	rjmp	.-4      	; 0x782 <WriteCfgToLis+0x1ca>
 786:	a9 9a       	sbi	0x15, 1	; 21
 788:	aa 9a       	sbi	0x15, 2	; 21
 78a:	aa 9b       	sbis	0x15, 2	; 21
 78c:	fe cf       	rjmp	.-4      	; 0x78a <WriteCfgToLis+0x1d2>
 78e:	aa 9a       	sbi	0x15, 2	; 21
 790:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 794:	ef 5f       	subi	r30, 0xFF	; 255
 796:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 79a:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 79e:	e8 17       	cp	r30, r24
 7a0:	08 f0       	brcs	.+2      	; 0x7a4 <WriteCfgToLis+0x1ec>
 7a2:	85 cf       	rjmp	.-246    	; 0x6ae <WriteCfgToLis+0xf6>
 7a4:	f0 e0       	ldi	r31, 0x00	; 0
 7a6:	e1 5d       	subi	r30, 0xD1	; 209
 7a8:	fe 4f       	sbci	r31, 0xFE	; 254
 7aa:	80 81       	ld	r24, Z
 7ac:	81 30       	cpi	r24, 0x01	; 1
 7ae:	39 f7       	brne	.-50     	; 0x77e <WriteCfgToLis+0x1c6>
 7b0:	5e 9a       	sbi	0x0b, 6	; 11
 7b2:	e6 cf       	rjmp	.-52     	; 0x780 <WriteCfgToLis+0x1c8>
 7b4:	5e 98       	cbi	0x0b, 6	; 11
 7b6:	a9 9a       	sbi	0x15, 1	; 21
 7b8:	a9 9b       	sbis	0x15, 1	; 21
 7ba:	fe cf       	rjmp	.-4      	; 0x7b8 <WriteCfgToLis+0x200>
 7bc:	a9 9a       	sbi	0x15, 1	; 21
 7be:	aa 9a       	sbi	0x15, 2	; 21
 7c0:	aa 9b       	sbis	0x15, 2	; 21
 7c2:	fe cf       	rjmp	.-4      	; 0x7c0 <WriteCfgToLis+0x208>
 7c4:	aa 9a       	sbi	0x15, 2	; 21
 7c6:	5e 98       	cbi	0x0b, 6	; 11
 7c8:	a9 9a       	sbi	0x15, 1	; 21
 7ca:	a9 9b       	sbis	0x15, 1	; 21
 7cc:	fe cf       	rjmp	.-4      	; 0x7ca <WriteCfgToLis+0x212>
 7ce:	a9 9a       	sbi	0x15, 1	; 21
 7d0:	aa 9a       	sbi	0x15, 2	; 21
 7d2:	aa 9b       	sbis	0x15, 2	; 21
 7d4:	fe cf       	rjmp	.-4      	; 0x7d2 <WriteCfgToLis+0x21a>
 7d6:	30 cf       	rjmp	.-416    	; 0x638 <WriteCfgToLis+0x80>
 7d8:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 7dc:	88 23       	and	r24, r24
 7de:	09 f4       	brne	.+2      	; 0x7e2 <WriteCfgToLis+0x22a>
 7e0:	66 cf       	rjmp	.-308    	; 0x6ae <WriteCfgToLis+0xf6>
 7e2:	e0 e0       	ldi	r30, 0x00	; 0
 7e4:	f0 e0       	ldi	r31, 0x00	; 0
 7e6:	e6 58       	subi	r30, 0x86	; 134
 7e8:	fe 4f       	sbci	r31, 0xFE	; 254
 7ea:	80 81       	ld	r24, Z
 7ec:	81 30       	cpi	r24, 0x01	; 1
 7ee:	c9 f0       	breq	.+50     	; 0x822 <WriteCfgToLis+0x26a>
 7f0:	5e 98       	cbi	0x0b, 6	; 11
 7f2:	a9 9a       	sbi	0x15, 1	; 21
 7f4:	a9 9b       	sbis	0x15, 1	; 21
 7f6:	fe cf       	rjmp	.-4      	; 0x7f4 <WriteCfgToLis+0x23c>
 7f8:	a9 9a       	sbi	0x15, 1	; 21
 7fa:	aa 9a       	sbi	0x15, 2	; 21
 7fc:	aa 9b       	sbis	0x15, 2	; 21
 7fe:	fe cf       	rjmp	.-4      	; 0x7fc <WriteCfgToLis+0x244>
 800:	aa 9a       	sbi	0x15, 2	; 21
 802:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 806:	ef 5f       	subi	r30, 0xFF	; 255
 808:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 80c:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 810:	e8 17       	cp	r30, r24
 812:	08 f0       	brcs	.+2      	; 0x816 <WriteCfgToLis+0x25e>
 814:	4c cf       	rjmp	.-360    	; 0x6ae <WriteCfgToLis+0xf6>
 816:	f0 e0       	ldi	r31, 0x00	; 0
 818:	e6 58       	subi	r30, 0x86	; 134
 81a:	fe 4f       	sbci	r31, 0xFE	; 254
 81c:	80 81       	ld	r24, Z
 81e:	81 30       	cpi	r24, 0x01	; 1
 820:	39 f7       	brne	.-50     	; 0x7f0 <WriteCfgToLis+0x238>
 822:	5e 9a       	sbi	0x0b, 6	; 11
 824:	e6 cf       	rjmp	.-52     	; 0x7f2 <WriteCfgToLis+0x23a>
 826:	5e 9a       	sbi	0x0b, 6	; 11
 828:	31 cf       	rjmp	.-414    	; 0x68c <WriteCfgToLis+0xd4>
 82a:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 82e:	88 23       	and	r24, r24
 830:	09 f4       	brne	.+2      	; 0x834 <WriteCfgToLis+0x27c>
 832:	3d cf       	rjmp	.-390    	; 0x6ae <WriteCfgToLis+0xf6>
 834:	e0 e0       	ldi	r30, 0x00	; 0
 836:	f0 e0       	ldi	r31, 0x00	; 0
 838:	e8 5b       	subi	r30, 0xB8	; 184
 83a:	fe 4f       	sbci	r31, 0xFE	; 254
 83c:	80 81       	ld	r24, Z
 83e:	81 30       	cpi	r24, 0x01	; 1
 840:	c9 f0       	breq	.+50     	; 0x874 <WriteCfgToLis+0x2bc>
 842:	5e 98       	cbi	0x0b, 6	; 11
 844:	a9 9a       	sbi	0x15, 1	; 21
 846:	a9 9b       	sbis	0x15, 1	; 21
 848:	fe cf       	rjmp	.-4      	; 0x846 <WriteCfgToLis+0x28e>
 84a:	a9 9a       	sbi	0x15, 1	; 21
 84c:	aa 9a       	sbi	0x15, 2	; 21
 84e:	aa 9b       	sbis	0x15, 2	; 21
 850:	fe cf       	rjmp	.-4      	; 0x84e <WriteCfgToLis+0x296>
 852:	aa 9a       	sbi	0x15, 2	; 21
 854:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 858:	ef 5f       	subi	r30, 0xFF	; 255
 85a:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 85e:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 862:	e8 17       	cp	r30, r24
 864:	08 f0       	brcs	.+2      	; 0x868 <WriteCfgToLis+0x2b0>
 866:	23 cf       	rjmp	.-442    	; 0x6ae <WriteCfgToLis+0xf6>
 868:	f0 e0       	ldi	r31, 0x00	; 0
 86a:	e8 5b       	subi	r30, 0xB8	; 184
 86c:	fe 4f       	sbci	r31, 0xFE	; 254
 86e:	80 81       	ld	r24, Z
 870:	81 30       	cpi	r24, 0x01	; 1
 872:	39 f7       	brne	.-50     	; 0x842 <WriteCfgToLis+0x28a>
 874:	5e 9a       	sbi	0x0b, 6	; 11
 876:	e6 cf       	rjmp	.-52     	; 0x844 <WriteCfgToLis+0x28c>
 878:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 87c:	88 23       	and	r24, r24
 87e:	09 f4       	brne	.+2      	; 0x882 <WriteCfgToLis+0x2ca>
 880:	16 cf       	rjmp	.-468    	; 0x6ae <WriteCfgToLis+0xf6>
 882:	e0 e0       	ldi	r30, 0x00	; 0
 884:	f0 e0       	ldi	r31, 0x00	; 0
 886:	ef 59       	subi	r30, 0x9F	; 159
 888:	fe 4f       	sbci	r31, 0xFE	; 254
 88a:	80 81       	ld	r24, Z
 88c:	81 30       	cpi	r24, 0x01	; 1
 88e:	c9 f0       	breq	.+50     	; 0x8c2 <WriteCfgToLis+0x30a>
 890:	5e 98       	cbi	0x0b, 6	; 11
 892:	a9 9a       	sbi	0x15, 1	; 21
 894:	a9 9b       	sbis	0x15, 1	; 21
 896:	fe cf       	rjmp	.-4      	; 0x894 <WriteCfgToLis+0x2dc>
 898:	a9 9a       	sbi	0x15, 1	; 21
 89a:	aa 9a       	sbi	0x15, 2	; 21
 89c:	aa 9b       	sbis	0x15, 2	; 21
 89e:	fe cf       	rjmp	.-4      	; 0x89c <WriteCfgToLis+0x2e4>
 8a0:	aa 9a       	sbi	0x15, 2	; 21
 8a2:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 8a6:	ef 5f       	subi	r30, 0xFF	; 255
 8a8:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 8ac:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 8b0:	e8 17       	cp	r30, r24
 8b2:	08 f0       	brcs	.+2      	; 0x8b6 <WriteCfgToLis+0x2fe>
 8b4:	fc ce       	rjmp	.-520    	; 0x6ae <WriteCfgToLis+0xf6>
 8b6:	f0 e0       	ldi	r31, 0x00	; 0
 8b8:	ef 59       	subi	r30, 0x9F	; 159
 8ba:	fe 4f       	sbci	r31, 0xFE	; 254
 8bc:	80 81       	ld	r24, Z
 8be:	81 30       	cpi	r24, 0x01	; 1
 8c0:	39 f7       	brne	.-50     	; 0x890 <WriteCfgToLis+0x2d8>
 8c2:	5e 9a       	sbi	0x0b, 6	; 11
 8c4:	e6 cf       	rjmp	.-52     	; 0x892 <WriteCfgToLis+0x2da>
 8c6:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 8ca:	88 23       	and	r24, r24
 8cc:	09 f4       	brne	.+2      	; 0x8d0 <WriteCfgToLis+0x318>
 8ce:	ef ce       	rjmp	.-546    	; 0x6ae <WriteCfgToLis+0xf6>
 8d0:	e0 e0       	ldi	r30, 0x00	; 0
 8d2:	f0 e0       	ldi	r31, 0x00	; 0
 8d4:	eb 53       	subi	r30, 0x3B	; 59
 8d6:	fe 4f       	sbci	r31, 0xFE	; 254
 8d8:	80 81       	ld	r24, Z
 8da:	81 30       	cpi	r24, 0x01	; 1
 8dc:	c9 f0       	breq	.+50     	; 0x910 <__stack+0x11>
 8de:	5e 98       	cbi	0x0b, 6	; 11
 8e0:	a9 9a       	sbi	0x15, 1	; 21
 8e2:	a9 9b       	sbis	0x15, 1	; 21
 8e4:	fe cf       	rjmp	.-4      	; 0x8e2 <WriteCfgToLis+0x32a>
 8e6:	a9 9a       	sbi	0x15, 1	; 21
 8e8:	aa 9a       	sbi	0x15, 2	; 21
 8ea:	aa 9b       	sbis	0x15, 2	; 21
 8ec:	fe cf       	rjmp	.-4      	; 0x8ea <WriteCfgToLis+0x332>
 8ee:	aa 9a       	sbi	0x15, 2	; 21
 8f0:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 8f4:	ef 5f       	subi	r30, 0xFF	; 255
 8f6:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 8fa:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 8fe:	e8 17       	cp	r30, r24
 900:	08 f0       	brcs	.+2      	; 0x904 <__stack+0x5>
 902:	d5 ce       	rjmp	.-598    	; 0x6ae <WriteCfgToLis+0xf6>
 904:	f0 e0       	ldi	r31, 0x00	; 0
 906:	eb 53       	subi	r30, 0x3B	; 59
 908:	fe 4f       	sbci	r31, 0xFE	; 254
 90a:	80 81       	ld	r24, Z
 90c:	81 30       	cpi	r24, 0x01	; 1
 90e:	39 f7       	brne	.-50     	; 0x8de <WriteCfgToLis+0x326>
 910:	5e 9a       	sbi	0x0b, 6	; 11
 912:	e6 cf       	rjmp	.-52     	; 0x8e0 <WriteCfgToLis+0x328>
 914:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 918:	88 23       	and	r24, r24
 91a:	09 f4       	brne	.+2      	; 0x91e <__stack+0x1f>
 91c:	c8 ce       	rjmp	.-624    	; 0x6ae <WriteCfgToLis+0xf6>
 91e:	e0 e0       	ldi	r30, 0x00	; 0
 920:	f0 e0       	ldi	r31, 0x00	; 0
 922:	e4 55       	subi	r30, 0x54	; 84
 924:	fe 4f       	sbci	r31, 0xFE	; 254
 926:	80 81       	ld	r24, Z
 928:	81 30       	cpi	r24, 0x01	; 1
 92a:	c9 f0       	breq	.+50     	; 0x95e <__stack+0x5f>
 92c:	5e 98       	cbi	0x0b, 6	; 11
 92e:	a9 9a       	sbi	0x15, 1	; 21
 930:	a9 9b       	sbis	0x15, 1	; 21
 932:	fe cf       	rjmp	.-4      	; 0x930 <__stack+0x31>
 934:	a9 9a       	sbi	0x15, 1	; 21
 936:	aa 9a       	sbi	0x15, 2	; 21
 938:	aa 9b       	sbis	0x15, 2	; 21
 93a:	fe cf       	rjmp	.-4      	; 0x938 <__stack+0x39>
 93c:	aa 9a       	sbi	0x15, 2	; 21
 93e:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 942:	ef 5f       	subi	r30, 0xFF	; 255
 944:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 948:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 94c:	e8 17       	cp	r30, r24
 94e:	08 f0       	brcs	.+2      	; 0x952 <__stack+0x53>
 950:	ae ce       	rjmp	.-676    	; 0x6ae <WriteCfgToLis+0xf6>
 952:	f0 e0       	ldi	r31, 0x00	; 0
 954:	e4 55       	subi	r30, 0x54	; 84
 956:	fe 4f       	sbci	r31, 0xFE	; 254
 958:	80 81       	ld	r24, Z
 95a:	81 30       	cpi	r24, 0x01	; 1
 95c:	39 f7       	brne	.-50     	; 0x92c <__stack+0x2d>
 95e:	5e 9a       	sbi	0x0b, 6	; 11
 960:	e6 cf       	rjmp	.-52     	; 0x92e <__stack+0x2f>
 962:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 966:	88 23       	and	r24, r24
 968:	09 f4       	brne	.+2      	; 0x96c <__stack+0x6d>
 96a:	a1 ce       	rjmp	.-702    	; 0x6ae <WriteCfgToLis+0xf6>
 96c:	e0 e0       	ldi	r30, 0x00	; 0
 96e:	f0 e0       	ldi	r31, 0x00	; 0
 970:	ed 56       	subi	r30, 0x6D	; 109
 972:	fe 4f       	sbci	r31, 0xFE	; 254
 974:	80 81       	ld	r24, Z
 976:	81 30       	cpi	r24, 0x01	; 1
 978:	99 f0       	breq	.+38     	; 0x9a0 <__stack+0xa1>
 97a:	5e 98       	cbi	0x0b, 6	; 11
 97c:	a9 9a       	sbi	0x15, 1	; 21
 97e:	a9 9b       	sbis	0x15, 1	; 21
 980:	fe cf       	rjmp	.-4      	; 0x97e <__stack+0x7f>
 982:	a9 9a       	sbi	0x15, 1	; 21
 984:	aa 9a       	sbi	0x15, 2	; 21
 986:	aa 9b       	sbis	0x15, 2	; 21
 988:	fe cf       	rjmp	.-4      	; 0x986 <__stack+0x87>
 98a:	aa 9a       	sbi	0x15, 2	; 21
 98c:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
 990:	ef 5f       	subi	r30, 0xFF	; 255
 992:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__data_end>
 996:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <nprogbits_rowselect>
 99a:	e8 17       	cp	r30, r24
 99c:	40 f3       	brcs	.-48     	; 0x96e <__stack+0x6f>
 99e:	87 ce       	rjmp	.-754    	; 0x6ae <WriteCfgToLis+0xf6>
 9a0:	5e 9a       	sbi	0x0b, 6	; 11
 9a2:	ec cf       	rjmp	.-40     	; 0x97c <__stack+0x7d>

000009a4 <AutoExpose>:
 9a4:	ef 92       	push	r14
 9a6:	ff 92       	push	r15
 9a8:	0f 93       	push	r16
 9aa:	1f 93       	push	r17
 9ac:	cf 93       	push	r28
 9ae:	df 93       	push	r29
 9b0:	00 d0       	rcall	.+0      	; 0x9b2 <AutoExpose+0xe>
 9b2:	cd b7       	in	r28, 0x3d	; 61
 9b4:	de b7       	in	r29, 0x3e	; 62
 9b6:	0e 94 c5 00 	call	0x18a	; 0x18a <DebugLedsToggleAll>
 9ba:	78 ea       	ldi	r23, 0xA8	; 168
 9bc:	e7 2e       	mov	r14, r23
 9be:	71 e6       	ldi	r23, 0x61	; 97
 9c0:	f7 2e       	mov	r15, r23
 9c2:	0e 94 c5 00 	call	0x18a	; 0x18a <DebugLedsToggleAll>
 9c6:	40 9a       	sbi	0x08, 0	; 8
 9c8:	0e 94 10 02 	call	0x420	; 0x420 <LisFrameReadout>
 9cc:	40 98       	cbi	0x08, 0	; 8
 9ce:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <lis_sum_mode>
 9d2:	81 30       	cpi	r24, 0x01	; 1
 9d4:	09 f4       	brne	.+2      	; 0x9d8 <AutoExpose+0x34>
 9d6:	84 c0       	rjmp	.+264    	; 0xae0 <AutoExpose+0x13c>
 9d8:	40 e1       	ldi	r20, 0x10	; 16
 9da:	53 e0       	ldi	r21, 0x03	; 3
 9dc:	ac e4       	ldi	r26, 0x4C	; 76
 9de:	b2 e0       	ldi	r27, 0x02	; 2
 9e0:	4e 5f       	subi	r20, 0xFE	; 254
 9e2:	5f 4f       	sbci	r21, 0xFF	; 255
 9e4:	22 e0       	ldi	r18, 0x02	; 2
 9e6:	30 e0       	ldi	r19, 0x00	; 0
 9e8:	eb e4       	ldi	r30, 0x4B	; 75
 9ea:	f2 e0       	ldi	r31, 0x02	; 2
 9ec:	00 e0       	ldi	r16, 0x00	; 0
 9ee:	10 e0       	ldi	r17, 0x00	; 0
 9f0:	80 81       	ld	r24, Z
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	98 2f       	mov	r25, r24
 9f6:	88 27       	eor	r24, r24
 9f8:	32 96       	adiw	r30, 0x02	; 2
 9fa:	f0 93 fa 01 	sts	0x01FA, r31	; 0x8001fa <pframe+0x1>
 9fe:	e0 93 f9 01 	sts	0x01F9, r30	; 0x8001f9 <pframe>
 a02:	6c 91       	ld	r22, X
 a04:	86 2b       	or	r24, r22
 a06:	08 17       	cp	r16, r24
 a08:	19 07       	cpc	r17, r25
 a0a:	08 f4       	brcc	.+2      	; 0xa0e <AutoExpose+0x6a>
 a0c:	8c 01       	movw	r16, r24
 a0e:	30 93 46 02 	sts	0x0246, r19	; 0x800246 <Lis_npixels_counter+0x1>
 a12:	20 93 45 02 	sts	0x0245, r18	; 0x800245 <Lis_npixels_counter>
 a16:	2f 5f       	subi	r18, 0xFF	; 255
 a18:	3f 4f       	sbci	r19, 0xFF	; 255
 a1a:	12 96       	adiw	r26, 0x02	; 2
 a1c:	42 17       	cp	r20, r18
 a1e:	53 07       	cpc	r21, r19
 a20:	39 f7       	brne	.-50     	; 0x9f0 <AutoExpose+0x4c>
 a22:	0e 94 c5 00 	call	0x18a	; 0x18a <DebugLedsToggleAll>
 a26:	01 15       	cp	r16, r1
 a28:	11 05       	cpc	r17, r1
 a2a:	81 f0       	breq	.+32     	; 0xa4c <AutoExpose+0xa8>
 a2c:	01 33       	cpi	r16, 0x31	; 49
 a2e:	85 e7       	ldi	r24, 0x75	; 117
 a30:	18 07       	cpc	r17, r24
 a32:	08 f4       	brcc	.+2      	; 0xa36 <AutoExpose+0x92>
 a34:	58 c0       	rjmp	.+176    	; 0xae6 <AutoExpose+0x142>
 a36:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <Lis_nticks_exposure>
 a3a:	90 91 fc 01 	lds	r25, 0x01FC	; 0x8001fc <Lis_nticks_exposure+0x1>
 a3e:	96 95       	lsr	r25
 a40:	87 95       	ror	r24
 a42:	90 93 fc 01 	sts	0x01FC, r25	; 0x8001fc <Lis_nticks_exposure+0x1>
 a46:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <Lis_nticks_exposure>
 a4a:	bb cf       	rjmp	.-138    	; 0x9c2 <AutoExpose+0x1e>
 a4c:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <Lis_nticks_exposure>
 a50:	90 91 fc 01 	lds	r25, 0x01FC	; 0x8001fc <Lis_nticks_exposure+0x1>
 a54:	88 3a       	cpi	r24, 0xA8	; 168
 a56:	21 e6       	ldi	r18, 0x61	; 97
 a58:	92 07       	cpc	r25, r18
 a5a:	80 f4       	brcc	.+32     	; 0xa7c <AutoExpose+0xd8>
 a5c:	9c 01       	movw	r18, r24
 a5e:	22 0f       	add	r18, r18
 a60:	33 1f       	adc	r19, r19
 a62:	88 0f       	add	r24, r24
 a64:	99 1f       	adc	r25, r25
 a66:	88 0f       	add	r24, r24
 a68:	99 1f       	adc	r25, r25
 a6a:	88 0f       	add	r24, r24
 a6c:	99 1f       	adc	r25, r25
 a6e:	82 0f       	add	r24, r18
 a70:	93 1f       	adc	r25, r19
 a72:	90 93 fc 01 	sts	0x01FC, r25	; 0x8001fc <Lis_nticks_exposure+0x1>
 a76:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <Lis_nticks_exposure>
 a7a:	a3 cf       	rjmp	.-186    	; 0x9c2 <AutoExpose+0x1e>
 a7c:	88 ea       	ldi	r24, 0xA8	; 168
 a7e:	91 e6       	ldi	r25, 0x61	; 97
 a80:	90 93 fc 01 	sts	0x01FC, r25	; 0x8001fc <Lis_nticks_exposure+0x1>
 a84:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <Lis_nticks_exposure>
 a88:	88 ea       	ldi	r24, 0xA8	; 168
 a8a:	91 e6       	ldi	r25, 0x61	; 97
 a8c:	99 83       	std	Y+1, r25	; 0x01
 a8e:	8a 83       	std	Y+2, r24	; 0x02
 a90:	8e 01       	movw	r16, r28
 a92:	0f 5f       	subi	r16, 0xFF	; 255
 a94:	1f 4f       	sbci	r17, 0xFF	; 255
 a96:	7e 01       	movw	r14, r28
 a98:	f3 e0       	ldi	r31, 0x03	; 3
 a9a:	ef 0e       	add	r14, r31
 a9c:	f1 1c       	adc	r15, r1
 a9e:	f8 01       	movw	r30, r16
 aa0:	81 91       	ld	r24, Z+
 aa2:	8f 01       	movw	r16, r30
 aa4:	8e bd       	out	0x2e, r24	; 46
 aa6:	2c 98       	cbi	0x05, 4	; 5
 aa8:	8c b5       	in	r24, 0x2c	; 44
 aaa:	8f 7b       	andi	r24, 0xBF	; 191
 aac:	8c bd       	out	0x2c, r24	; 44
 aae:	e0 91 fd 01 	lds	r30, 0x01FD	; 0x8001fd <Delay3CpuCyclesPerTick>
 ab2:	f0 91 fe 01 	lds	r31, 0x01FE	; 0x8001fe <Delay3CpuCyclesPerTick+0x1>
 ab6:	8a e0       	ldi	r24, 0x0A	; 10
 ab8:	09 95       	icall
 aba:	8c b5       	in	r24, 0x2c	; 44
 abc:	80 64       	ori	r24, 0x40	; 64
 abe:	8c bd       	out	0x2c, r24	; 44
 ac0:	0d b4       	in	r0, 0x2d	; 45
 ac2:	07 fe       	sbrs	r0, 7
 ac4:	fd cf       	rjmp	.-6      	; 0xac0 <AutoExpose+0x11c>
 ac6:	8e b5       	in	r24, 0x2e	; 46
 ac8:	e0 16       	cp	r14, r16
 aca:	f1 06       	cpc	r15, r17
 acc:	41 f7       	brne	.-48     	; 0xa9e <AutoExpose+0xfa>
 ace:	0f 90       	pop	r0
 ad0:	0f 90       	pop	r0
 ad2:	df 91       	pop	r29
 ad4:	cf 91       	pop	r28
 ad6:	1f 91       	pop	r17
 ad8:	0f 91       	pop	r16
 ada:	ff 90       	pop	r15
 adc:	ef 90       	pop	r14
 ade:	08 95       	ret
 ae0:	48 e8       	ldi	r20, 0x88	; 136
 ae2:	51 e0       	ldi	r21, 0x01	; 1
 ae4:	7b cf       	rjmp	.-266    	; 0x9dc <AutoExpose+0x38>
 ae6:	00 32       	cpi	r16, 0x20	; 32
 ae8:	ee e4       	ldi	r30, 0x4E	; 78
 aea:	1e 07       	cpc	r17, r30
 aec:	e8 f4       	brcc	.+58     	; 0xb28 <AutoExpose+0x184>
 aee:	20 91 fb 01 	lds	r18, 0x01FB	; 0x8001fb <Lis_nticks_exposure>
 af2:	30 91 fc 01 	lds	r19, 0x01FC	; 0x8001fc <Lis_nticks_exposure+0x1>
 af6:	28 3a       	cpi	r18, 0xA8	; 168
 af8:	f1 e6       	ldi	r31, 0x61	; 97
 afa:	3f 07       	cpc	r19, r31
 afc:	08 f0       	brcs	.+2      	; 0xb00 <AutoExpose+0x15c>
 afe:	be cf       	rjmp	.-132    	; 0xa7c <AutoExpose+0xd8>
 b00:	a0 e2       	ldi	r26, 0x20	; 32
 b02:	be e4       	ldi	r27, 0x4E	; 78
 b04:	0e 94 2b 07 	call	0xe56	; 0xe56 <__umulhisi3>
 b08:	98 01       	movw	r18, r16
 b0a:	40 e0       	ldi	r20, 0x00	; 0
 b0c:	50 e0       	ldi	r21, 0x00	; 0
 b0e:	0e 94 09 07 	call	0xe12	; 0xe12 <__udivmodsi4>
 b12:	29 3a       	cpi	r18, 0xA9	; 169
 b14:	81 e6       	ldi	r24, 0x61	; 97
 b16:	38 07       	cpc	r19, r24
 b18:	41 05       	cpc	r20, r1
 b1a:	51 05       	cpc	r21, r1
 b1c:	50 f0       	brcs	.+20     	; 0xb32 <AutoExpose+0x18e>
 b1e:	f0 92 fc 01 	sts	0x01FC, r15	; 0x8001fc <Lis_nticks_exposure+0x1>
 b22:	e0 92 fb 01 	sts	0x01FB, r14	; 0x8001fb <Lis_nticks_exposure>
 b26:	4d cf       	rjmp	.-358    	; 0x9c2 <AutoExpose+0x1e>
 b28:	90 91 fc 01 	lds	r25, 0x01FC	; 0x8001fc <Lis_nticks_exposure+0x1>
 b2c:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <Lis_nticks_exposure>
 b30:	ad cf       	rjmp	.-166    	; 0xa8c <AutoExpose+0xe8>
 b32:	30 93 fc 01 	sts	0x01FC, r19	; 0x8001fc <Lis_nticks_exposure+0x1>
 b36:	20 93 fb 01 	sts	0x01FB, r18	; 0x8001fb <Lis_nticks_exposure>
 b3a:	43 cf       	rjmp	.-378    	; 0x9c2 <AutoExpose+0x1e>

00000b3c <SendDataMasterAskedFor>:
 b3c:	ef 92       	push	r14
 b3e:	ff 92       	push	r15
 b40:	0f 93       	push	r16
 b42:	1f 93       	push	r17
 b44:	cf 93       	push	r28
 b46:	df 93       	push	r29
 b48:	00 d0       	rcall	.+0      	; 0xb4a <SendDataMasterAskedFor+0xe>
 b4a:	cd b7       	in	r28, 0x3d	; 61
 b4c:	de b7       	in	r29, 0x3e	; 62
 b4e:	98 b1       	in	r25, 0x08	; 8
 b50:	81 e0       	ldi	r24, 0x01	; 1
 b52:	89 27       	eor	r24, r25
 b54:	88 b9       	out	0x08, r24	; 8
 b56:	0d b4       	in	r0, 0x2d	; 45
 b58:	07 fe       	sbrs	r0, 7
 b5a:	fd cf       	rjmp	.-6      	; 0xb56 <SendDataMasterAskedFor+0x1a>
 b5c:	8e b5       	in	r24, 0x2e	; 46
 b5e:	81 30       	cpi	r24, 0x01	; 1
 b60:	09 f4       	brne	.+2      	; 0xb64 <SendDataMasterAskedFor+0x28>
 b62:	8d c0       	rjmp	.+282    	; 0xc7e <SendDataMasterAskedFor+0x142>
 b64:	82 30       	cpi	r24, 0x02	; 2
 b66:	09 f4       	brne	.+2      	; 0xb6a <SendDataMasterAskedFor+0x2e>
 b68:	43 c0       	rjmp	.+134    	; 0xbf0 <SendDataMasterAskedFor+0xb4>
 b6a:	85 31       	cpi	r24, 0x15	; 21
 b6c:	09 f4       	brne	.+2      	; 0xb70 <SendDataMasterAskedFor+0x34>
 b6e:	bb c0       	rjmp	.+374    	; 0xce6 <SendDataMasterAskedFor+0x1aa>
 b70:	86 30       	cpi	r24, 0x06	; 6
 b72:	09 f4       	brne	.+2      	; 0xb76 <SendDataMasterAskedFor+0x3a>
 b74:	7d c0       	rjmp	.+250    	; 0xc70 <SendDataMasterAskedFor+0x134>
 b76:	85 30       	cpi	r24, 0x05	; 5
 b78:	09 f4       	brne	.+2      	; 0xb7c <SendDataMasterAskedFor+0x40>
 b7a:	7e c0       	rjmp	.+252    	; 0xc78 <SendDataMasterAskedFor+0x13c>
 b7c:	88 30       	cpi	r24, 0x08	; 8
 b7e:	09 f4       	brne	.+2      	; 0xb82 <SendDataMasterAskedFor+0x46>
 b80:	aa c0       	rjmp	.+340    	; 0xcd6 <SendDataMasterAskedFor+0x19a>
 b82:	89 30       	cpi	r24, 0x09	; 9
 b84:	09 f4       	brne	.+2      	; 0xb88 <SendDataMasterAskedFor+0x4c>
 b86:	ab c0       	rjmp	.+342    	; 0xcde <SendDataMasterAskedFor+0x1a2>
 b88:	8a 30       	cpi	r24, 0x0A	; 10
 b8a:	09 f4       	brne	.+2      	; 0xb8e <SendDataMasterAskedFor+0x52>
 b8c:	b6 c0       	rjmp	.+364    	; 0xcfa <SendDataMasterAskedFor+0x1be>
 b8e:	8b 30       	cpi	r24, 0x0B	; 11
 b90:	09 f4       	brne	.+2      	; 0xb94 <SendDataMasterAskedFor+0x58>
 b92:	bb c0       	rjmp	.+374    	; 0xd0a <SendDataMasterAskedFor+0x1ce>
 b94:	8c 30       	cpi	r24, 0x0C	; 12
 b96:	09 f4       	brne	.+2      	; 0xb9a <SendDataMasterAskedFor+0x5e>
 b98:	bc c0       	rjmp	.+376    	; 0xd12 <SendDataMasterAskedFor+0x1d6>
 b9a:	8d 30       	cpi	r24, 0x0D	; 13
 b9c:	09 f4       	brne	.+2      	; 0xba0 <SendDataMasterAskedFor+0x64>
 b9e:	bf c0       	rjmp	.+382    	; 0xd1e <SendDataMasterAskedFor+0x1e2>
 ba0:	8e 30       	cpi	r24, 0x0E	; 14
 ba2:	09 f4       	brne	.+2      	; 0xba6 <SendDataMasterAskedFor+0x6a>
 ba4:	c0 c0       	rjmp	.+384    	; 0xd26 <SendDataMasterAskedFor+0x1ea>
 ba6:	8f 30       	cpi	r24, 0x0F	; 15
 ba8:	09 f4       	brne	.+2      	; 0xbac <SendDataMasterAskedFor+0x70>
 baa:	c1 c0       	rjmp	.+386    	; 0xd2e <SendDataMasterAskedFor+0x1f2>
 bac:	80 31       	cpi	r24, 0x10	; 16
 bae:	09 f4       	brne	.+2      	; 0xbb2 <SendDataMasterAskedFor+0x76>
 bb0:	c2 c0       	rjmp	.+388    	; 0xd36 <SendDataMasterAskedFor+0x1fa>
 bb2:	81 31       	cpi	r24, 0x11	; 17
 bb4:	09 f4       	brne	.+2      	; 0xbb8 <SendDataMasterAskedFor+0x7c>
 bb6:	a5 c0       	rjmp	.+330    	; 0xd02 <SendDataMasterAskedFor+0x1c6>
 bb8:	82 31       	cpi	r24, 0x12	; 18
 bba:	09 f4       	brne	.+2      	; 0xbbe <SendDataMasterAskedFor+0x82>
 bbc:	c0 c0       	rjmp	.+384    	; 0xd3e <SendDataMasterAskedFor+0x202>
 bbe:	83 31       	cpi	r24, 0x13	; 19
 bc0:	09 f4       	brne	.+2      	; 0xbc4 <SendDataMasterAskedFor+0x88>
 bc2:	c1 c0       	rjmp	.+386    	; 0xd46 <SendDataMasterAskedFor+0x20a>
 bc4:	84 31       	cpi	r24, 0x14	; 20
 bc6:	09 f4       	brne	.+2      	; 0xbca <SendDataMasterAskedFor+0x8e>
 bc8:	c2 c0       	rjmp	.+388    	; 0xd4e <SendDataMasterAskedFor+0x212>
 bca:	87 30       	cpi	r24, 0x07	; 7
 bcc:	09 f4       	brne	.+2      	; 0xbd0 <SendDataMasterAskedFor+0x94>
 bce:	c3 c0       	rjmp	.+390    	; 0xd56 <SendDataMasterAskedFor+0x21a>
 bd0:	90 91 ff 01 	lds	r25, 0x01FF	; 0x8001ff <slave_ignore>
 bd4:	89 17       	cp	r24, r25
 bd6:	09 f4       	brne	.+2      	; 0xbda <SendDataMasterAskedFor+0x9e>
 bd8:	42 c0       	rjmp	.+132    	; 0xc5e <SendDataMasterAskedFor+0x122>
 bda:	83 e0       	ldi	r24, 0x03	; 3
 bdc:	0f 90       	pop	r0
 bde:	0f 90       	pop	r0
 be0:	df 91       	pop	r29
 be2:	cf 91       	pop	r28
 be4:	1f 91       	pop	r17
 be6:	0f 91       	pop	r16
 be8:	ff 90       	pop	r15
 bea:	ef 90       	pop	r14
 bec:	0c 94 a2 00 	jmp	0x144	; 0x144 <DebugLedsTurnRed>
 bf0:	0d b4       	in	r0, 0x2d	; 45
 bf2:	07 fe       	sbrs	r0, 7
 bf4:	fd cf       	rjmp	.-6      	; 0xbf0 <SendDataMasterAskedFor+0xb4>
 bf6:	2e b5       	in	r18, 0x2e	; 46
 bf8:	0d b4       	in	r0, 0x2d	; 45
 bfa:	07 fe       	sbrs	r0, 7
 bfc:	fd cf       	rjmp	.-6      	; 0xbf8 <SendDataMasterAskedFor+0xbc>
 bfe:	8e b5       	in	r24, 0x2e	; 46
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	92 2b       	or	r25, r18
 c04:	90 93 fc 01 	sts	0x01FC, r25	; 0x8001fc <Lis_nticks_exposure+0x1>
 c08:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <Lis_nticks_exposure>
 c0c:	98 b1       	in	r25, 0x08	; 8
 c0e:	84 e0       	ldi	r24, 0x04	; 4
 c10:	89 27       	eor	r24, r25
 c12:	88 b9       	out	0x08, r24	; 8
 c14:	80 91 fb 01 	lds	r24, 0x01FB	; 0x8001fb <Lis_nticks_exposure>
 c18:	90 91 fc 01 	lds	r25, 0x01FC	; 0x8001fc <Lis_nticks_exposure+0x1>
 c1c:	99 83       	std	Y+1, r25	; 0x01
 c1e:	8a 83       	std	Y+2, r24	; 0x02
 c20:	8e 01       	movw	r16, r28
 c22:	0f 5f       	subi	r16, 0xFF	; 255
 c24:	1f 4f       	sbci	r17, 0xFF	; 255
 c26:	7e 01       	movw	r14, r28
 c28:	f3 e0       	ldi	r31, 0x03	; 3
 c2a:	ef 0e       	add	r14, r31
 c2c:	f1 1c       	adc	r15, r1
 c2e:	f8 01       	movw	r30, r16
 c30:	81 91       	ld	r24, Z+
 c32:	8f 01       	movw	r16, r30
 c34:	8e bd       	out	0x2e, r24	; 46
 c36:	2c 98       	cbi	0x05, 4	; 5
 c38:	8c b5       	in	r24, 0x2c	; 44
 c3a:	8f 7b       	andi	r24, 0xBF	; 191
 c3c:	8c bd       	out	0x2c, r24	; 44
 c3e:	e0 91 fd 01 	lds	r30, 0x01FD	; 0x8001fd <Delay3CpuCyclesPerTick>
 c42:	f0 91 fe 01 	lds	r31, 0x01FE	; 0x8001fe <Delay3CpuCyclesPerTick+0x1>
 c46:	8a e0       	ldi	r24, 0x0A	; 10
 c48:	09 95       	icall
 c4a:	8c b5       	in	r24, 0x2c	; 44
 c4c:	80 64       	ori	r24, 0x40	; 64
 c4e:	8c bd       	out	0x2c, r24	; 44
 c50:	0d b4       	in	r0, 0x2d	; 45
 c52:	07 fe       	sbrs	r0, 7
 c54:	fd cf       	rjmp	.-6      	; 0xc50 <SendDataMasterAskedFor+0x114>
 c56:	8e b5       	in	r24, 0x2e	; 46
 c58:	0e 15       	cp	r16, r14
 c5a:	1f 05       	cpc	r17, r15
 c5c:	41 f7       	brne	.-48     	; 0xc2e <SendDataMasterAskedFor+0xf2>
 c5e:	0f 90       	pop	r0
 c60:	0f 90       	pop	r0
 c62:	df 91       	pop	r29
 c64:	cf 91       	pop	r28
 c66:	1f 91       	pop	r17
 c68:	0f 91       	pop	r16
 c6a:	ff 90       	pop	r15
 c6c:	ef 90       	pop	r14
 c6e:	08 95       	ret
 c70:	81 e0       	ldi	r24, 0x01	; 1
 c72:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <lis_sum_mode>
 c76:	f3 cf       	rjmp	.-26     	; 0xc5e <SendDataMasterAskedFor+0x122>
 c78:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <lis_sum_mode>
 c7c:	f0 cf       	rjmp	.-32     	; 0xc5e <SendDataMasterAskedFor+0x122>
 c7e:	40 9a       	sbi	0x08, 0	; 8
 c80:	0e 94 10 02 	call	0x420	; 0x420 <LisFrameReadout>
 c84:	40 98       	cbi	0x08, 0	; 8
 c86:	41 9a       	sbi	0x08, 1	; 8
 c88:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <lis_sum_mode>
 c8c:	81 30       	cpi	r24, 0x01	; 1
 c8e:	09 f4       	brne	.+2      	; 0xc92 <SendDataMasterAskedFor+0x156>
 c90:	43 c0       	rjmp	.+134    	; 0xd18 <SendDataMasterAskedFor+0x1dc>
 c92:	80 e2       	ldi	r24, 0x20	; 32
 c94:	96 e0       	ldi	r25, 0x06	; 6
 c96:	0b e4       	ldi	r16, 0x4B	; 75
 c98:	12 e0       	ldi	r17, 0x02	; 2
 c9a:	9c 01       	movw	r18, r24
 c9c:	25 5b       	subi	r18, 0xB5	; 181
 c9e:	3d 4f       	sbci	r19, 0xFD	; 253
 ca0:	79 01       	movw	r14, r18
 ca2:	f8 01       	movw	r30, r16
 ca4:	81 91       	ld	r24, Z+
 ca6:	8f 01       	movw	r16, r30
 ca8:	8e bd       	out	0x2e, r24	; 46
 caa:	2c 98       	cbi	0x05, 4	; 5
 cac:	8c b5       	in	r24, 0x2c	; 44
 cae:	8f 7b       	andi	r24, 0xBF	; 191
 cb0:	8c bd       	out	0x2c, r24	; 44
 cb2:	e0 91 fd 01 	lds	r30, 0x01FD	; 0x8001fd <Delay3CpuCyclesPerTick>
 cb6:	f0 91 fe 01 	lds	r31, 0x01FE	; 0x8001fe <Delay3CpuCyclesPerTick+0x1>
 cba:	8a e0       	ldi	r24, 0x0A	; 10
 cbc:	09 95       	icall
 cbe:	8c b5       	in	r24, 0x2c	; 44
 cc0:	80 64       	ori	r24, 0x40	; 64
 cc2:	8c bd       	out	0x2c, r24	; 44
 cc4:	0d b4       	in	r0, 0x2d	; 45
 cc6:	07 fe       	sbrs	r0, 7
 cc8:	fd cf       	rjmp	.-6      	; 0xcc4 <SendDataMasterAskedFor+0x188>
 cca:	8e b5       	in	r24, 0x2e	; 46
 ccc:	e0 16       	cp	r14, r16
 cce:	f1 06       	cpc	r15, r17
 cd0:	41 f7       	brne	.-48     	; 0xca2 <SendDataMasterAskedFor+0x166>
 cd2:	41 98       	cbi	0x08, 1	; 8
 cd4:	c4 cf       	rjmp	.-120    	; 0xc5e <SendDataMasterAskedFor+0x122>
 cd6:	85 e0       	ldi	r24, 0x05	; 5
 cd8:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <lis_gain>
 cdc:	c0 cf       	rjmp	.-128    	; 0xc5e <SendDataMasterAskedFor+0x122>
 cde:	84 e0       	ldi	r24, 0x04	; 4
 ce0:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <lis_gain>
 ce4:	bc cf       	rjmp	.-136    	; 0xc5e <SendDataMasterAskedFor+0x122>
 ce6:	0f 90       	pop	r0
 ce8:	0f 90       	pop	r0
 cea:	df 91       	pop	r29
 cec:	cf 91       	pop	r28
 cee:	1f 91       	pop	r17
 cf0:	0f 91       	pop	r16
 cf2:	ff 90       	pop	r15
 cf4:	ef 90       	pop	r14
 cf6:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <AutoExpose>
 cfa:	82 e0       	ldi	r24, 0x02	; 2
 cfc:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <lis_gain>
 d00:	ae cf       	rjmp	.-164    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d02:	85 e0       	ldi	r24, 0x05	; 5
 d04:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <lis_rowselect>
 d08:	aa cf       	rjmp	.-172    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d0a:	81 e0       	ldi	r24, 0x01	; 1
 d0c:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <lis_gain>
 d10:	a6 cf       	rjmp	.-180    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d12:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <lis_rowselect>
 d16:	a3 cf       	rjmp	.-186    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d18:	80 e1       	ldi	r24, 0x10	; 16
 d1a:	93 e0       	ldi	r25, 0x03	; 3
 d1c:	bc cf       	rjmp	.-136    	; 0xc96 <SendDataMasterAskedFor+0x15a>
 d1e:	81 e0       	ldi	r24, 0x01	; 1
 d20:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <lis_rowselect>
 d24:	9c cf       	rjmp	.-200    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d26:	82 e0       	ldi	r24, 0x02	; 2
 d28:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <lis_rowselect>
 d2c:	98 cf       	rjmp	.-208    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d2e:	83 e0       	ldi	r24, 0x03	; 3
 d30:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <lis_rowselect>
 d34:	94 cf       	rjmp	.-216    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d36:	84 e0       	ldi	r24, 0x04	; 4
 d38:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <lis_rowselect>
 d3c:	90 cf       	rjmp	.-224    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d3e:	86 e0       	ldi	r24, 0x06	; 6
 d40:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <lis_rowselect>
 d44:	8c cf       	rjmp	.-232    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d46:	87 e0       	ldi	r24, 0x07	; 7
 d48:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <lis_rowselect>
 d4c:	88 cf       	rjmp	.-240    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d4e:	88 e0       	ldi	r24, 0x08	; 8
 d50:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <lis_rowselect>
 d54:	84 cf       	rjmp	.-248    	; 0xc5e <SendDataMasterAskedFor+0x122>
 d56:	0f 90       	pop	r0
 d58:	0f 90       	pop	r0
 d5a:	df 91       	pop	r29
 d5c:	cf 91       	pop	r28
 d5e:	1f 91       	pop	r17
 d60:	0f 91       	pop	r16
 d62:	ff 90       	pop	r15
 d64:	ef 90       	pop	r14
 d66:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <WriteCfgToLis>

00000d6a <main>:
 d6a:	0e 94 86 00 	call	0x10c	; 0x10c <DebugLedsTurnAllOn>
 d6e:	0e 94 a9 00 	call	0x152	; 0x152 <DebugLedsTurnAllGreen>
 d72:	0e 94 07 01 	call	0x20e	; 0x20e <SpiSlaveInit>
 d76:	0e 94 21 01 	call	0x242	; 0x242 <UartSpiInit>
 d7a:	0e 94 92 01 	call	0x324	; 0x324 <LisInit>
 d7e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <SpiTransferIsDone>
 d82:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <SpiTransferIsDone+0x1>
 d86:	09 95       	icall
 d88:	88 23       	and	r24, r24
 d8a:	c9 f3       	breq	.-14     	; 0xd7e <main+0x14>
 d8c:	0e 94 9e 05 	call	0xb3c	; 0xb3c <SendDataMasterAskedFor>
 d90:	f6 cf       	rjmp	.-20     	; 0xd7e <main+0x14>

00000d92 <__vector_17>:
void SPI_read_in_ISR_and_show_data_on_debug_leds(void);
/* =====[ Move control over the SPI ISR into the test code ]===== */
typedef void (SPI_ISR_task)(void); SPI_ISR_task *DoTaskForThisTest;
//
ISR(SPI_STC_vect)
{
 d92:	1f 92       	push	r1
 d94:	0f 92       	push	r0
 d96:	0f b6       	in	r0, 0x3f	; 63
 d98:	0f 92       	push	r0
 d9a:	11 24       	eor	r1, r1
 d9c:	2f 93       	push	r18
 d9e:	3f 93       	push	r19
 da0:	4f 93       	push	r20
 da2:	5f 93       	push	r21
 da4:	6f 93       	push	r22
 da6:	7f 93       	push	r23
 da8:	8f 93       	push	r24
 daa:	9f 93       	push	r25
 dac:	af 93       	push	r26
 dae:	bf 93       	push	r27
 db0:	ef 93       	push	r30
 db2:	ff 93       	push	r31
    DoTaskForThisTest(); // fptr assigned in test code
 db4:	e0 91 49 02 	lds	r30, 0x0249	; 0x800249 <DoTaskForThisTest>
 db8:	f0 91 4a 02 	lds	r31, 0x024A	; 0x80024a <DoTaskForThisTest+0x1>
 dbc:	09 95       	icall
}
 dbe:	ff 91       	pop	r31
 dc0:	ef 91       	pop	r30
 dc2:	bf 91       	pop	r27
 dc4:	af 91       	pop	r26
 dc6:	9f 91       	pop	r25
 dc8:	8f 91       	pop	r24
 dca:	7f 91       	pop	r23
 dcc:	6f 91       	pop	r22
 dce:	5f 91       	pop	r21
 dd0:	4f 91       	pop	r20
 dd2:	3f 91       	pop	r19
 dd4:	2f 91       	pop	r18
 dd6:	0f 90       	pop	r0
 dd8:	0f be       	out	0x3f, r0	; 63
 dda:	0f 90       	pop	r0
 ddc:	1f 90       	pop	r1
 dde:	18 95       	reti

00000de0 <__vector_14>:
ISR(TIMER0_COMPA_vect)
{
 de0:	1f 92       	push	r1
 de2:	0f 92       	push	r0
 de4:	0f b6       	in	r0, 0x3f	; 63
 de6:	0f 92       	push	r0
 de8:	11 24       	eor	r1, r1
    // high-level delay:
    /* SetBit(Lis_port1, Lis_Rst); */
    // low-level delay:
    PORTD |= 1<<PD6;    // set bit: Rst High
 dea:	5e 9a       	sbi	0x0b, 6	; 11
    // delay is 1.8us-2us from redge to Rst High
}
 dec:	0f 90       	pop	r0
 dee:	0f be       	out	0x3f, r0	; 63
 df0:	0f 90       	pop	r0
 df2:	1f 90       	pop	r1
 df4:	18 95       	reti

00000df6 <__vector_15>:
ISR(TIMER0_COMPB_vect)
{
 df6:	1f 92       	push	r1
 df8:	0f 92       	push	r0
 dfa:	0f b6       	in	r0, 0x3f	; 63
 dfc:	0f 92       	push	r0
 dfe:	11 24       	eor	r1, r1
    // high-level delay:
    /* ClearBit(Lis_port1, Lis_Rst); */
    // low-level delay:
    PORTD &= ~(1<<PD6); // clear bit: Rst Low
 e00:	5e 98       	cbi	0x0b, 6	; 11
    // delay is 1.8us-2us from fedge to Rst low
} 
 e02:	0f 90       	pop	r0
 e04:	0f be       	out	0x3f, r0	; 63
 e06:	0f 90       	pop	r0
 e08:	1f 90       	pop	r1
 e0a:	18 95       	reti

00000e0c <Delay3CpuCyclesPerTick_Implementation>:
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 e0c:	8a 95       	dec	r24
 e0e:	f1 f7       	brne	.-4      	; 0xe0c <Delay3CpuCyclesPerTick_Implementation>
 e10:	08 95       	ret

00000e12 <__udivmodsi4>:
 e12:	a1 e2       	ldi	r26, 0x21	; 33
 e14:	1a 2e       	mov	r1, r26
 e16:	aa 1b       	sub	r26, r26
 e18:	bb 1b       	sub	r27, r27
 e1a:	fd 01       	movw	r30, r26
 e1c:	0d c0       	rjmp	.+26     	; 0xe38 <__udivmodsi4_ep>

00000e1e <__udivmodsi4_loop>:
 e1e:	aa 1f       	adc	r26, r26
 e20:	bb 1f       	adc	r27, r27
 e22:	ee 1f       	adc	r30, r30
 e24:	ff 1f       	adc	r31, r31
 e26:	a2 17       	cp	r26, r18
 e28:	b3 07       	cpc	r27, r19
 e2a:	e4 07       	cpc	r30, r20
 e2c:	f5 07       	cpc	r31, r21
 e2e:	20 f0       	brcs	.+8      	; 0xe38 <__udivmodsi4_ep>
 e30:	a2 1b       	sub	r26, r18
 e32:	b3 0b       	sbc	r27, r19
 e34:	e4 0b       	sbc	r30, r20
 e36:	f5 0b       	sbc	r31, r21

00000e38 <__udivmodsi4_ep>:
 e38:	66 1f       	adc	r22, r22
 e3a:	77 1f       	adc	r23, r23
 e3c:	88 1f       	adc	r24, r24
 e3e:	99 1f       	adc	r25, r25
 e40:	1a 94       	dec	r1
 e42:	69 f7       	brne	.-38     	; 0xe1e <__udivmodsi4_loop>
 e44:	60 95       	com	r22
 e46:	70 95       	com	r23
 e48:	80 95       	com	r24
 e4a:	90 95       	com	r25
 e4c:	9b 01       	movw	r18, r22
 e4e:	ac 01       	movw	r20, r24
 e50:	bd 01       	movw	r22, r26
 e52:	cf 01       	movw	r24, r30
 e54:	08 95       	ret

00000e56 <__umulhisi3>:
 e56:	a2 9f       	mul	r26, r18
 e58:	b0 01       	movw	r22, r0
 e5a:	b3 9f       	mul	r27, r19
 e5c:	c0 01       	movw	r24, r0
 e5e:	a3 9f       	mul	r26, r19
 e60:	70 0d       	add	r23, r0
 e62:	81 1d       	adc	r24, r1
 e64:	11 24       	eor	r1, r1
 e66:	91 1d       	adc	r25, r1
 e68:	b2 9f       	mul	r27, r18
 e6a:	70 0d       	add	r23, r0
 e6c:	81 1d       	adc	r24, r1
 e6e:	11 24       	eor	r1, r1
 e70:	91 1d       	adc	r25, r1
 e72:	08 95       	ret

00000e74 <_exit>:
 e74:	f8 94       	cli

00000e76 <__stop_program>:
 e76:	ff cf       	rjmp	.-2      	; 0xe76 <__stop_program>
